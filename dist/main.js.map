{"version":3,"sources":["webpack:///main.js","webpack:///webpack/bootstrap bbc2817cb1ddd31daac5","webpack:///./~/incremental-dom/src/node_data.js","webpack:///./~/incremental-dom/src/walker.js","webpack:///./src/helpers/component.js","webpack:///./~/incremental-dom/src/attributes.js","webpack:///./~/incremental-dom/src/traversal.js","webpack:///./~/incremental-dom/src/alignment.js","webpack:///./~/incremental-dom/src/namespace.js","webpack:///./~/node-libs-browser/~/process/browser.js","webpack:///./src/components/App.jsx","webpack:///./src/components/RecipeList.jsx","webpack:///./src/components/pages/RecipeListPage.jsx","webpack:///./src/components/pages/RecipePage.jsx","webpack:///./src/main.js","webpack:///./src/models/Recipe.js","webpack:///./~/incremental-dom/index.js","webpack:///./~/incremental-dom/src/nodes.js","webpack:///./~/incremental-dom/src/patch.js","webpack:///./~/incremental-dom/src/tree_walker.js","webpack:///./~/incremental-dom/src/virtual_elements.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","NodeData","nodeName","key","this","attrs","attrsArr","newAttrs","keyMap","lastVisitedChild","text","initData","node","data","getData","toLowerCase","Element","getAttribute","getKey","getNodeName","walker_","getWalker","setWalker","walker","__esModule","_incrementalDomSrcAlignmentJs","_incrementalDomSrcWalkerJs","_incrementalDomSrcNode_dataJs","_incrementalDomSrcTraversalJs","setPrototypeOf","Object","obj","proto","__proto__","componentPrototype","constructor","shouldUpdate","render","setState","newState","state","IncrementalDOM","patch","parentNode","_rerender","currentNode","nextSibling","_render","lastChild","props","__component","spec","Component","bind","prototype","rootNodeName","undefined","alignWithDOM","component","prevProps","attributes","applyAttr","el","name","value","type","removeAttribute","setAttribute","applyStyle","style","cssText","prop","updateAttribute","namespace","enterNode","enterTag","exitNode","exitTag","removeChild","markVisited","parent","getCurrentParent","firstChild","nodes","createNode","getChild","registerChild","nodeData","matches","statics","matchingNode","existingNode","doc","insertBefore","SVG_NS","tag","enterNamespace","exitNamespace","getNamespaceForTag","getCurrentNamespace","cleanUpNextTick","draining","currentQueue","length","queue","concat","queueIndex","drainQueue","timeout","setTimeout","len","run","clearTimeout","Item","fun","array","noop","process","nextTick","args","Array","arguments","i","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","Error","cwd","chdir","dir","umask","_interopRequireDefault","default","_helpersComponentJs","_helpersComponentJs2","_pagesRecipeListPageJsx","_pagesRecipeListPageJsx2","_pagesRecipePageJsx","_pagesRecipePageJsx2","_modelsRecipeJs","_modelsRecipeJs2","PAGE_LIST","PAGE_RECIPE","ALL_RECIPES","query","page","recipes","_ref","selectedRecipe","elementOpen","onSelect","handleRecipeSelect","recipe","onClose","handleCloseRecipe","elementClose","forEach","_RecipeListJsx","_RecipeListJsx2","ingredients","ingredient","elementVoid","handleAddIngredient","directions","direction","handleAddDirection","_ref2","target","_ref3","_incrementalDom","_incrementalDom2","_componentsAppJsx","_componentsAppJsx2","window","APP","Recipe","nextRecipeId","elements","elementOpenStart","elementOpenEnd","attr","createElement","createElementNS","createTextNode","createKeyMap","map","children","count","child","getKeyMap","traversal","TreeWalker","IS_PRODUCTION","NODE_ENV","assertNoUnclosedTags","root","openElement","openTags","join","fn","prevWalker","stack_","ownerDocument","nsStack_","pop","ATTRIBUTES_OFFSET","argsBuilder","inAttributes","assertNotInAttributes","assertInAttributes","assertCloseMatchesOpenTag","closingNode","setInAttributes","setNotInAttributes","hasChangedAttrs","unused1","unused2","unused3","var_args","attrsChanged","j","updateNewAttrs","updateAttributes"],"mappings":"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","file":"main.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(13);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS-IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t\n\t/**\n\t * Keeps track of information needed to perform diffs for a given DOM node.\n\t * @param {?string} nodeName\n\t * @param {?string} key\n\t * @constructor\n\t */\n\tfunction NodeData(nodeName, key) {\n\t  /**\n\t   * The attributes and their values.\n\t   * @const\n\t   */\n\t  this.attrs = {};\n\t\n\t  /**\n\t   * An array of attribute name/value pairs, used for quickly diffing the\n\t   * incomming attributes to see if the DOM node's attributes need to be\n\t   * updated.\n\t   * @const {Array<*>}\n\t   */\n\t  this.attrsArr = [];\n\t\n\t  /**\n\t   * The incoming attributes for this Node, before they are updated.\n\t   * @const {!Object<string, *>}\n\t   */\n\t  this.newAttrs = {};\n\t\n\t  /**\n\t   * The key used to identify this node, used to preserve DOM nodes when they\n\t   * move within their parent.\n\t   * @const\n\t   */\n\t  this.key = key || null;\n\t\n\t  /**\n\t   * Keeps track of children within this node by their key.\n\t   * {?Object<string, Node>}\n\t   */\n\t  this.keyMap = null;\n\t\n\t  /**\n\t   * The last child to have been visited within the current pass.\n\t   * {?Node}\n\t   */\n\t  this.lastVisitedChild = null;\n\t\n\t  /**\n\t   * The node name for this node.\n\t   * @const\n\t   */\n\t  this.nodeName = nodeName;\n\t\n\t  /**\n\t   * @const {string}\n\t   */\n\t  this.text = null;\n\t}\n\t\n\t\n\t/**\n\t * Initializes a NodeData object for a Node.\n\t *\n\t * @param {!Node} node The node to initialize data for.\n\t * @param {string} nodeName The node name of node.\n\t * @param {?string} key The key that identifies the node.\n\t * @return {!NodeData} The newly initialized data object\n\t */\n\tvar initData = function(node, nodeName, key) {\n\t  var data = new NodeData(nodeName, key);\n\t  node['__incrementalDOMData'] = data;\n\t  return data;\n\t};\n\t\n\t\n\t/**\n\t * Retrieves the NodeData object for a Node, creating it if necessary.\n\t *\n\t * @param {!Node} node The node to retrieve the data for.\n\t * @return {NodeData} The NodeData for this Node.\n\t */\n\tvar getData = function(node) {\n\t  var data = node['__incrementalDOMData'];\n\t\n\t  if (!data) {\n\t    var nodeName = node.nodeName.toLowerCase();\n\t    var key = null;\n\t\n\t    if (node instanceof Element) {\n\t      key = node.getAttribute('key');\n\t    }\n\t\n\t    data = initData(node, nodeName, key);\n\t  }\n\t\n\t  return data;\n\t};\n\t\n\t\n\t/**\n\t * @param {?Node} node A node to get the key for.\n\t * @return {?string} The key for the Node, if applicable.\n\t */\n\tvar getKey = function(node) {\n\t  return getData(node).key;\n\t};\n\t\n\t\n\t/**\n\t * @param {?Node} node A node to get the node name for.\n\t * @return {?string} The node name for the Node, if applicable.\n\t */\n\tvar getNodeName = function(node) {\n\t  return getData(node).nodeName;\n\t};\n\t\n\t\n\t/** */\n\tmodule.exports = {\n\t  getData: getData,\n\t  initData: initData,\n\t  getKey: getKey,\n\t  getNodeName: getNodeName\n\t};\n\t\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS-IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t/**\n\t * @type {TreeWalker}\n\t */\n\tvar walker_;\n\t\n\t\n\t/**\n\t * @return {TreeWalker} the current TreeWalker\n\t */\n\tvar getWalker = function() {\n\t  return walker_;\n\t};\n\t\n\t\n\t/**\n\t * Sets the current TreeWalker\n\t * @param {TreeWalker} walker\n\t */\n\tvar setWalker = function(walker) {\n\t  walker_ = walker;\n\t};\n\t\n\t\n\t/** */\n\tmodule.exports = {\n\t  getWalker: getWalker,\n\t  setWalker: setWalker\n\t};\n\t\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t\n\tStateful components that can decide whether they need to be re-rendered to improve performance.\n\tThis is a function creates a function that can be called in a render (`IncrementalDOM.patch()`).\n\t\n\tExample:\n\t\n\t```\n\t// Using Babel/JSX\n\tconst Greeter = component({\n\t  render: props=>\n\t    <span>Hello {props.name}!</span>,\n\t\n\t  shouldUpdate: (props, prevProps)=>\n\t    props.name !== prevProps.name,\n\t});\n\t\n\tIncremental.patch(rootNode, ()=>{\n\t  <div>\n\t    <Greeter name=\"Peter\" />\n\t  </div>\n\t});\n\t\n\t// ES5/IncrementalDOM (compiled from above)\n\tvar Greeter = component({\n\t  render: function render(props) {\n\t    return (\n\t      IncrementalDOM.elementOpen(\"span\"),\n\t        IncrementalDOM.text(\"Hello \"), IncrementalDOM.text(props.name),\n\t      IncrementalDOM.elementClose(\"span\")\n\t    );\n\t  },\n\t\n\t  shouldUpdate: function(props, prevProps) {\n\t    return props.name !== prevProps.name;\n\t  }\n\t});\n\t\n\tIncremental.patch(rootNode, function () {\n\t  IncrementalDOM.elementOpen(\"div\"),\n\t    Greeter({name: \"Peter\"}),\n\t  IncrementalDOM.elementClose(\"div\");\n\t});\n\t```\n\t\n\tRequirements:\n\t\n\t- Handle initial render\n\t- Handle parent re-render\n\t- Handle component re-render (setState called)\n\t\n\t*/\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _incrementalDomSrcAlignmentJs = __webpack_require__(6);\n\t\n\tvar _incrementalDomSrcWalkerJs = __webpack_require__(2);\n\t\n\tvar _incrementalDomSrcNode_dataJs = __webpack_require__(1);\n\t\n\tvar _incrementalDomSrcTraversalJs = __webpack_require__(5);\n\t\n\tvar setPrototypeOf = Object.setPrototypeOf || function (obj, proto) {\n\t  obj.__proto__ = proto; //eslint-disable-line\n\t  return obj;\n\t};\n\t\n\tvar componentPrototype = {\n\t  constructor: function constructor() {},\n\t  shouldUpdate: function shouldUpdate() {\n\t    return true;\n\t  },\n\t  render: function render() {},\n\t\n\t  setState: function setState(newState) {\n\t    this.state = newState;\n\t    IncrementalDOM.patch(this.node.parentNode, this._rerender);\n\t  },\n\t\n\t  _rerender: function _rerender() {\n\t    var parentNode = this.node.parentNode;\n\t    var walker = _incrementalDomSrcWalkerJs.getWalker();\n\t\n\t    // Skip over all siblings before component's element\n\t    while (walker.currentNode !== this.node) {\n\t      _incrementalDomSrcTraversalJs.nextSibling();\n\t    }\n\t\n\t    this._render();\n\t\n\t    // Mark the last child as visited so IncrementalDOM\n\t    // doesn't truncate all sibling elements after the\n\t    // component's element\n\t    _incrementalDomSrcNode_dataJs.getData(parentNode).lastVisitedChild = parentNode.lastChild;\n\t  },\n\t\n\t  _render: function _render() {\n\t    this.node = this.render(this.props, this.state, this.setState);\n\t    this.node.__component = this;\n\t    return this.node;\n\t  }\n\t};\n\t\n\texports[\"default\"] = function (spec) {\n\t  function Component(props) {\n\t    this.node = null;\n\t    this.props = props;\n\t    this._rerender = this._rerender.bind(this);\n\t    this.constructor(props);\n\t  }\n\t\n\t  Component.prototype = setPrototypeOf(spec, componentPrototype);\n\t\n\t  // When rendering a component, we need to determine whether it's one of the following cases:\n\t  //   - Initial render\n\t  //   - Re-render\n\t  //\n\t  // We can determine this by asking IncrementalDOM whether we're about to render to an existing\n\t  // node (`alignWithDOM(nodeName, key)`).\n\t  // The node name isn't known at the time of component declaration, but can be determined on\n\t  // the very first render.\n\t  var rootNodeName = undefined;\n\t\n\t  return function (props) {\n\t    var key = props && props.key;\n\t\n\t    // Asking IncrementalDOM whether we are going to be re-rendering an existing component\n\t    // or rendering a new component.\n\t    var node = rootNodeName && _incrementalDomSrcAlignmentJs.alignWithDOM(rootNodeName, key);\n\t    var component = node && node.__component;\n\t\n\t    // Render a new component\n\t    if (!component) {\n\t      component = new Component(props);\n\t      rootNodeName = component._render().nodeName.toLowerCase();\n\t    }\n\t    // Parent re-render\n\t    else {\n\t        var prevProps = component.props;\n\t        component.props = props;\n\t        if (component.shouldUpdate(props, prevProps)) {\n\t          component._render();\n\t        } else {\n\t          _incrementalDomSrcTraversalJs.nextSibling();\n\t        }\n\t      }\n\t\n\t    return component.node;\n\t  };\n\t};\n\t\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS-IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\tvar getData = __webpack_require__(1).getData;\n\t\n\t\n\tvar attributes = {\n\t  /**\n\t   * Applies an attribute or property to a given Element. If the value is a\n\t   * object or a function (which includes null), it is set as a property on the\n\t   * Element. Otherwise, the value is set as an attribute.\n\t   * @param {!Element} el\n\t   * @param {string} name The attribute's name.\n\t   * @param {*} value The attribute's value. If the value is a string, it is set\n\t   *     as an HTML attribute, otherwise, it is set on node.\n\t   */\n\t  applyAttr: function(el, name, value) {\n\t    var type = typeof value;\n\t\n\t    if (type === 'object' || type === 'function') {\n\t      el[name] = value;\n\t    } else if (value === undefined) {\n\t      el.removeAttribute(name);\n\t    } else {\n\t      el.setAttribute(name, value);\n\t    }\n\t  },\n\t\n\t\n\t  /**\n\t   * Applies a style to an Element. No vendor prefix expansion is done for\n\t   * property names/values.\n\t   * @param {!Element} el\n\t   * @param {string|Object<string,string>} style The style to set. Either a\n\t   *     string of css or an object containing property-value pairs.\n\t   */\n\t  applyStyle: function(el, style) {\n\t    if (typeof style === 'string') {\n\t      el.style.cssText = style;\n\t    } else {\n\t      el.style.cssText = '';\n\t\n\t      for (var prop in style) {\n\t        el.style[prop] = style[prop];\n\t      }\n\t    }\n\t  },\n\t\n\t\n\t  /**\n\t   * Updates a single attribute on an Element.\n\t   * @param {!Element} el\n\t   * @param {string} name The attribute's name.\n\t   * @param {*} value The attribute's value. If the value is a string, it is set\n\t   *     as an HTML attribute, otherwise, it is set on node.\n\t   */\n\t  updateAttribute: function(el, name, value) {\n\t    var data = getData(el);\n\t    var attrs = data.attrs;\n\t\n\t    if (attrs[name] === value) {\n\t      return;\n\t    }\n\t\n\t    if (name === 'style') {\n\t      attributes.applyStyle(el, value);\n\t    } else {\n\t      attributes.applyAttr(el, name, value);\n\t    }\n\t\n\t    attrs[name] = value;\n\t  }\n\t};\n\t\n\t\n\t/** */\n\tmodule.exports = attributes;\n\t\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS-IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\tvar getWalker = __webpack_require__(2).getWalker;\n\tvar getData = __webpack_require__(1).getData;\n\tvar namespace = __webpack_require__(7);\n\t\n\t\n\t/**\n\t * Enters a Element, setting the current namespace for nested elements.\n\t * @param {!Element} node\n\t */\n\tvar enterNode = function(node) {\n\t  var data = getData(node);\n\t  namespace.enterTag(data.nodeName);\n\t};\n\t\n\t\n\t/**\n\t * Clears out any unvisited Nodes, as the corresponding virtual element\n\t * functions were never called for them, and unwinds the current namespace\n\t * to the previous value.\n\t * @param {!Element} node\n\t */\n\tvar exitNode = function(node) {\n\t  var data = getData(node);\n\t  var lastVisitedChild = data.lastVisitedChild;\n\t  data.lastVisitedChild = null;\n\t\n\t  namespace.exitTag(data.nodeName);\n\t\n\t  if (node.lastChild === lastVisitedChild) {\n\t    return;\n\t  }\n\t\n\t  while (node.lastChild !== lastVisitedChild) {\n\t    node.removeChild(node.lastChild);\n\t  }\n\t\n\t  // Invalidate the key map since we removed children. It will get recreated\n\t  // next time we need it.\n\t  data.keyMap = null;\n\t};\n\t\n\t\n\t/**\n\t * Marks node's parent as having visited node.\n\t * @param {!Node} node\n\t */\n\tvar markVisited = function(node) {\n\t  var walker = getWalker();\n\t  var parent = walker.getCurrentParent();\n\t  var data = getData(parent);\n\t  data.lastVisitedChild = node;\n\t};\n\t\n\t\n\t/**\n\t * Changes to the first child of the current node.\n\t */\n\tvar firstChild = function() {\n\t  var walker = getWalker();\n\t  enterNode(walker.currentNode);\n\t  walker.firstChild();\n\t};\n\t\n\t\n\t/**\n\t * Changes to the next sibling of the current node.\n\t */\n\tvar nextSibling = function() {\n\t  var walker = getWalker();\n\t  markVisited(walker.currentNode);\n\t  walker.nextSibling();\n\t};\n\t\n\t\n\t/**\n\t * Changes to the parent of the current node, removing any unvisited children.\n\t */\n\tvar parentNode = function() {\n\t  var walker = getWalker();\n\t  walker.parentNode();\n\t  exitNode(walker.currentNode);\n\t};\n\t\n\t\n\t/** */\n\tmodule.exports = {\n\t  firstChild: firstChild,\n\t  nextSibling: nextSibling,\n\t  parentNode: parentNode\n\t};\n\t\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS-IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\tvar nodes = __webpack_require__(18),\n\t    createNode = nodes.createNode,\n\t    getChild = nodes.getChild,\n\t    registerChild = nodes.registerChild;\n\tvar nodeData = __webpack_require__(1),\n\t    getKey = nodeData.getKey,\n\t    getNodeName = nodeData.getNodeName;\n\tvar getWalker = __webpack_require__(2).getWalker;\n\t\n\t\n\t/**\n\t * Checks whether or not a given node matches the specified nodeName and key.\n\t *\n\t * @param {!Node} node An HTML node, typically an HTMLElement or Text.\n\t * @param {?string} nodeName The nodeName for this node.\n\t * @param {?string} key An optional key that identifies a node.\n\t * @return {boolean} True if the node matches, false otherwise.\n\t */\n\tvar matches = function(node, nodeName, key) {\n\t  if (key) {\n\t    return key === getKey(node);\n\t  }\n\t  return nodeName === getNodeName(node);\n\t};\n\t\n\t\n\t/**\n\t * Aligns the virtual Element definition with the actual DOM, moving the\n\t * corresponding DOM node to the correct location or creating it if necessary.\n\t * @param {?string} nodeName For an Element, this should be a valid tag string.\n\t *     For a Text, this should be #text.\n\t * @param {?string} key The key used to identify this element.\n\t * @param {?Array<*>|string} statics For an Element, this should be an array of\n\t *     name-value pairs. For a Text, this should be the text content of the\n\t *     node.\n\t * @return {!Node} The matching node.\n\t */\n\tvar alignWithDOM = function(nodeName, key, statics) {\n\t  var walker = getWalker();\n\t  var currentNode = walker.currentNode;\n\t  var parent = walker.getCurrentParent();\n\t  var matchingNode;\n\t\n\t  // Check to see if we have a node to reuse\n\t  if (currentNode && matches(currentNode, nodeName, key)) {\n\t    matchingNode = currentNode;\n\t  } else {\n\t    var existingNode = key && getChild(parent, key);\n\t\n\t    // Check to see if the node has moved within the parent or if a new one\n\t    // should be created\n\t    if (existingNode) {\n\t      matchingNode = existingNode;\n\t    } else {\n\t      matchingNode = createNode(walker.doc, nodeName, key, statics);\n\t      if (key) {\n\t        registerChild(parent, key, matchingNode);\n\t      }\n\t    }\n\t\n\t    parent.insertBefore(matchingNode, currentNode);\n\t    walker.currentNode = matchingNode;\n\t  }\n\t\n\t  return matchingNode;\n\t};\n\t\n\t\n\t/** */\n\tmodule.exports = {\n\t  alignWithDOM: alignWithDOM\n\t};\n\t\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS-IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\tvar getWalker = __webpack_require__(2).getWalker;\n\t\n\tvar SVG_NS = 'http://www.w3.org/2000/svg';\n\t\n\t/**\n\t * Enters a tag, checking to see if it is a namespace boundary, and if so,\n\t * updates the current namespace.\n\t * @param {string} tag The tag to enter.\n\t */\n\tvar enterTag = function(tag) {\n\t  if (tag === 'svg') {\n\t    getWalker().enterNamespace(SVG_NS);\n\t  } else if (tag === 'foreignObject') {\n\t    getWalker().enterNamespace(undefined);\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * Exits a tag, checking to see if it is a namespace boundary, and if so,\n\t * updates the current namespace.\n\t * @param {string} tag The tag to enter.\n\t */\n\tvar exitTag = function(tag) {\n\t  if (tag === 'svg' || tag === 'foreignObject') {\n\t    getWalker().exitNamespace();\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * Gets the namespace to create an element (of a given tag) in.\n\t * @param {string} tag The tag to get the namespace for.\n\t * @return {string} The namespace to create the tag in.\n\t */\n\tvar getNamespaceForTag = function(tag) {\n\t  if (tag === 'svg') {\n\t    return SVG_NS;\n\t  }\n\t\n\t  return getWalker().getCurrentNamespace();\n\t};\n\t\n\t\n\t/** */\n\tmodule.exports = {\n\t  enterTag: enterTag,\n\t  exitTag: exitTag,\n\t  getNamespaceForTag: getNamespaceForTag\n\t};\n\t\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = setTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            currentQueue[queueIndex].run();\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    clearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        setTimeout(drainQueue, 0);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\t// TODO(shtylman)\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\t__webpack_require__(15);\n\t\n\tvar _helpersComponentJs = __webpack_require__(3);\n\t\n\tvar _helpersComponentJs2 = _interopRequireDefault(_helpersComponentJs);\n\t\n\tvar _pagesRecipeListPageJsx = __webpack_require__(11);\n\t\n\tvar _pagesRecipeListPageJsx2 = _interopRequireDefault(_pagesRecipeListPageJsx);\n\t\n\tvar _pagesRecipePageJsx = __webpack_require__(12);\n\t\n\tvar _pagesRecipePageJsx2 = _interopRequireDefault(_pagesRecipePageJsx);\n\t\n\tvar _modelsRecipeJs = __webpack_require__(14);\n\t\n\tvar _modelsRecipeJs2 = _interopRequireDefault(_modelsRecipeJs);\n\t\n\tvar PAGE_LIST = \"List\";\n\tvar PAGE_RECIPE = \"Recipe\";\n\tvar ALL_RECIPES = _modelsRecipeJs2[\"default\"].query();\n\t\n\texports[\"default\"] = _helpersComponentJs2[\"default\"]({\n\t  constructor: function constructor(props) {\n\t    this.state = {\n\t      // page           : PAGE_RECIPE,\n\t      // selectedRecipe : ALL_RECIPES[0]\n\t\n\t      page: PAGE_LIST,\n\t      recipes: ALL_RECIPES\n\t    };\n\t  },\n\t\n\t  render: function render(props, _ref) {\n\t    var page = _ref.page;\n\t    var selectedRecipe = _ref.selectedRecipe;\n\t    var recipes = _ref.recipes;\n\t\n\t    return (IncrementalDOM.elementOpen(\"div\", null, null, \"className\", \"App\"), IncrementalDOM.text((page === PAGE_LIST && (_pagesRecipeListPageJsx2[\"default\"]({\n\t      key: \"APP_RECIPE_LIST_PAGE\",\n\t      recipes: recipes,\n\t      onSelect: this.handleRecipeSelect.bind(this)\n\t    })), \"\")), IncrementalDOM.text((page === PAGE_RECIPE && (_pagesRecipePageJsx2[\"default\"]({\n\t      key: \"APP_RECIPE_PAGE\",\n\t      recipe: selectedRecipe,\n\t      onClose: this.handleCloseRecipe.bind(this)\n\t    })), \"\")), IncrementalDOM.elementClose(\"div\"));\n\t  },\n\t\n\t  handleRecipeSelect: function handleRecipeSelect(selectedRecipe) {\n\t    this.setState({ page: PAGE_RECIPE, selectedRecipe: selectedRecipe });\n\t  },\n\t\n\t  handleCloseRecipe: function handleCloseRecipe() {\n\t    this.setState({ page: PAGE_LIST, recipes: _modelsRecipeJs2[\"default\"].query() });\n\t  }\n\t});\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tvar _helpersComponentJs = __webpack_require__(3);\n\t\n\tvar _helpersComponentJs2 = _interopRequireDefault(_helpersComponentJs);\n\t\n\texports[\"default\"] = _helpersComponentJs2[\"default\"]({\n\t  render: function render(_ref) {\n\t    var recipes = _ref.recipes;\n\t    var onSelect = _ref.onSelect;\n\t    return (IncrementalDOM.elementOpen(\"ul\", null, null, \"className\", \"List\"), IncrementalDOM.elementOpen(\"li\", \"RECIPE_HEADER\", null, \"className\", \"List__item List__item--header\"), IncrementalDOM.text(\"Recipes\"), IncrementalDOM.elementClose(\"li\"), IncrementalDOM.text((recipes.forEach(function (recipe) {\n\t      return (IncrementalDOM.elementOpen(\"li\", recipe.id, null, \"className\", \"List__item\"), IncrementalDOM.elementOpen(\"a\", null, null, \"onclick\", function () {\n\t        return onSelect(recipe);\n\t      }), IncrementalDOM.text(recipe.title), IncrementalDOM.elementClose(\"a\"), IncrementalDOM.elementClose(\"li\"));\n\t    }), \"\")), IncrementalDOM.elementClose(\"ul\"));\n\t  }\n\t});\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tvar _helpersComponentJs = __webpack_require__(3);\n\t\n\tvar _helpersComponentJs2 = _interopRequireDefault(_helpersComponentJs);\n\t\n\tvar _RecipeListJsx = __webpack_require__(10);\n\t\n\tvar _RecipeListJsx2 = _interopRequireDefault(_RecipeListJsx);\n\t\n\texports[\"default\"] = _helpersComponentJs2[\"default\"]({\n\t  render: function render(_ref) {\n\t    var key = _ref.key;\n\t    var recipes = _ref.recipes;\n\t    var onSelect = _ref.onSelect;\n\t    return (IncrementalDOM.elementOpen(\"div\", key), IncrementalDOM.elementOpen(\"header\", null, null, \"className\", \"App-toolbar\"), IncrementalDOM.text(\"Recipes\"), IncrementalDOM.elementOpen(\"span\", null, null, \"className\", \"App-toolbar__icon App-toolbar__right-item\"), IncrementalDOM.text(\"+\"), IncrementalDOM.elementClose(\"span\"), IncrementalDOM.elementClose(\"header\"), IncrementalDOM.elementOpen(\"section\", null, null, \"className\", \"App-content\"), _RecipeListJsx2[\"default\"]({\n\t      recipes: recipes,\n\t      onSelect: onSelect\n\t    }), IncrementalDOM.elementClose(\"section\"), IncrementalDOM.elementClose(\"div\"));\n\t  }\n\t});\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tvar _helpersComponentJs = __webpack_require__(3);\n\t\n\tvar _helpersComponentJs2 = _interopRequireDefault(_helpersComponentJs);\n\t\n\texports[\"default\"] = _helpersComponentJs2[\"default\"]({\n\t  render: function render(_ref) {\n\t    var key = _ref.key;\n\t    var recipe = _ref.recipe;\n\t    var onClose = _ref.onClose;\n\t\n\t    return (IncrementalDOM.elementOpen(\"div\", key), IncrementalDOM.elementOpen(\"header\", null, null, \"className\", \"App-toolbar\"), IncrementalDOM.text(recipe.title), IncrementalDOM.elementOpen(\"a\", null, null, \"className\", \"App-toolbar__icon\", \"onclick\", onClose), IncrementalDOM.text(\"<\"), IncrementalDOM.elementClose(\"a\"), IncrementalDOM.elementClose(\"header\"), IncrementalDOM.elementOpen(\"section\", null, null, \"className\", \"App-content\"), IncrementalDOM.elementOpen(\"ul\", null, null, \"className\", \"List\"), IncrementalDOM.elementOpen(\"li\", \"RECIPE_INGREDIENTS\", null, \"className\", \"List__item List__item--header\"), IncrementalDOM.text(\"Ingredients\"), IncrementalDOM.elementClose(\"li\"), IncrementalDOM.text((recipe.ingredients.forEach(function (ingredient, i) {\n\t      return (IncrementalDOM.elementOpen(\"li\", ingredient + i, null, \"className\", \"List__item\"), IncrementalDOM.text(ingredient), IncrementalDOM.elementClose(\"li\"));\n\t    }), \"\")), IncrementalDOM.elementOpen(\"li\", \"RECIPE_ADD_INGREDIENT\", null, \"className\", \"List__item\"), IncrementalDOM.elementVoid(\"input\", null, null, \"placeholder\", \"add an ingredient\", \"onchange\", this.handleAddIngredient.bind(this)), IncrementalDOM.elementClose(\"li\"), IncrementalDOM.elementOpen(\"li\", \"RECIPE_DIRECTIONS\", null, \"className\", \"List__item List__item--header\"), IncrementalDOM.text(\"Directions\"), IncrementalDOM.elementClose(\"li\"), IncrementalDOM.text((recipe.directions.forEach(function (direction, i) {\n\t      return (IncrementalDOM.elementOpen(\"li\", direction + i, null, \"className\", \"List__item\"), IncrementalDOM.text(direction), IncrementalDOM.elementClose(\"li\"));\n\t    }), \"\")), IncrementalDOM.elementOpen(\"li\", \"RECIPE_ADD_DIRECTION\", null, \"className\", \"List__item\"), IncrementalDOM.elementVoid(\"input\", null, null, \"placeholder\", \"add a direction\", \"onchange\", this.handleAddDirection.bind(this)), IncrementalDOM.elementClose(\"li\"), IncrementalDOM.elementClose(\"ul\"), IncrementalDOM.elementClose(\"section\"), IncrementalDOM.elementClose(\"div\"));\n\t  },\n\t\n\t  handleAddIngredient: function handleAddIngredient(_ref2) {\n\t    var target = _ref2.target;\n\t\n\t    this.props.recipe.ingredients.push(target.value);\n\t    target.value = \"\";\n\t    this.setState();\n\t  },\n\t\n\t  handleAddDirection: function handleAddDirection(_ref3) {\n\t    var target = _ref3.target;\n\t\n\t    this.props.recipe.directions.push(target.value);\n\t    target.value = \"\";\n\t    this.setState();\n\t  }\n\t});\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\t__webpack_require__(16);\n\t\n\tvar _incrementalDom = __webpack_require__(17);\n\t\n\tvar _incrementalDom2 = _interopRequireDefault(_incrementalDom);\n\t\n\tvar _componentsAppJsx = __webpack_require__(9);\n\t\n\tvar _componentsAppJsx2 = _interopRequireDefault(_componentsAppJsx);\n\t\n\twindow.IncrementalDOM = _incrementalDom2[\"default\"];\n\t_incrementalDom2[\"default\"].attributes.applyAttr = function (el, name, value) {\n\t  el[name] = value;\n\t};\n\t_incrementalDom2[\"default\"].patch(window.APP, _componentsAppJsx2[\"default\"]);\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\tvar nextRecipeId = 0;\n\t\n\tfunction Recipe(_ref) {\n\t  var id = _ref.id;\n\t  var title = _ref.title;\n\t  var ingredients = _ref.ingredients;\n\t  var directions = _ref.directions;\n\t\n\t  this.id = id || ++nextRecipeId;\n\t  this.title = title;\n\t  this.ingredients = ingredients || [];\n\t  this.directions = directions || [];\n\t}\n\t\n\tRecipe.query = function () {\n\t  return [new Recipe({\n\t    title: \"Sausage Gumbo\",\n\t    ingredients: [\"1 onion\", \"2 carrots\", \"1 pepper\", \"1 cup chicken stock\", \"1/4 cup flour\"],\n\t    directions: [\"Cook the sausages\", \"Move the cooked sausages to the crockpot\", \"Cook the veggies\", \"Add the flour and chicken stock to the veggies\", \"Move the veggies to the crockpot\"]\n\t  }), new Recipe({\n\t    title: \"Broccoli Macaroni\",\n\t    ingredients: [\"1 broccoli head\", \"1 cup of cheese\", \"1 bundle of noodles\"],\n\t    directions: [\"Boil noodles\", \"Move the cooked sausages to the crockpot\", \"Cook the veggies\", \"Add the flour and chicken stock to the veggies\", \"Move the veggies to the crockpot\"]\n\t  })];\n\t};\n\t\n\texports[\"default\"] = Recipe;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @license\n\t * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS-IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\tvar patch = __webpack_require__(19).patch;\n\tvar elements = __webpack_require__(21);\n\tvar attributes = __webpack_require__(4);\n\t\n\tmodule.exports = {\n\t  patch: patch,\n\t  elementVoid: elements.elementVoid,\n\t  elementOpenStart: elements.elementOpenStart,\n\t  elementOpenEnd: elements.elementOpenEnd,\n\t  elementOpen: elements.elementOpen,\n\t  elementClose: elements.elementClose,\n\t  text: elements.text,\n\t  attr: elements.attr,\n\t  attributes: attributes\n\t};\n\t\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS-IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\tvar updateAttribute = __webpack_require__(4).updateAttribute;\n\tvar nodeData = __webpack_require__(1),\n\t    getData = nodeData.getData,\n\t    getKey = nodeData.getKey,\n\t    initData = nodeData.initData;\n\tvar getNamespaceForTag = __webpack_require__(7).getNamespaceForTag;\n\t\n\t\n\t/**\n\t * Creates an Element.\n\t * @param {!Document} doc The document with which to create the Element.\n\t * @param {string} tag The tag for the Element.\n\t * @param {?string} key A key to identify the Element.\n\t * @param {?Array<*>} statics An array of attribute name/value pairs of\n\t *     the static attributes for the Element.\n\t * @return {!Element}\n\t */\n\tvar createElement = function(doc, tag, key, statics) {\n\t  var namespace = getNamespaceForTag(tag);\n\t  var el;\n\t\n\t  if (namespace) {\n\t    el = doc.createElementNS(namespace, tag);\n\t  } else {\n\t    el = doc.createElement(tag);\n\t  }\n\t\n\t  initData(el, tag, key);\n\t\n\t  if (statics) {\n\t    for (var i = 0; i < statics.length; i += 2) {\n\t      updateAttribute(el, statics[i], statics[i + 1]);\n\t    }\n\t  }\n\t\n\t  return el;\n\t};\n\t\n\t/**\n\t * Creates a Text.\n\t * @param {!Document} doc The document with which to create the Text.\n\t * @param {string} text The initial content of the Text.\n\t * @return {!Text}\n\t */\n\tvar createTextNode = function(doc, text) {\n\t  var node = doc.createTextNode(text);\n\t  getData(node).text = text;\n\t\n\t  return node;\n\t};\n\t\n\t\n\t/**\n\t * Creates a Node, either a Text or an Element depending on the node name\n\t * provided.\n\t * @param {!Document} doc The document with which to create the Node.\n\t * @param {string} nodeName The tag if creating an element or #text to create\n\t *     a Text.\n\t * @param {?string} key A key to identify the Element.\n\t * @param {?Array<*>|string} statics The static data to initialize the Node\n\t *     with. For an Element, an array of attribute name/value pairs of\n\t *     the static attributes for the Element. For a Text, a string with the\n\t *     initial content of the Text.\n\t * @return {!Node}\n\t */\n\tvar createNode = function(doc, nodeName, key, statics) {\n\t  if (nodeName === '#text') {\n\t    return createTextNode(doc, statics);\n\t  }\n\t\n\t  return createElement(doc, nodeName, key, statics);\n\t};\n\t\n\t\n\t/**\n\t * Creates a mapping that can be used to look up children using a key.\n\t * @param {!Element} el\n\t * @return {!Object<string, !Node>} A mapping of keys to the children of the\n\t *     Element.\n\t */\n\tvar createKeyMap = function(el) {\n\t  var map = {};\n\t  var children = el.children;\n\t  var count = children.length;\n\t\n\t  for (var i = 0; i < count; i += 1) {\n\t    var child = children[i];\n\t    var key = getKey(child);\n\t\n\t    if (key) {\n\t      map[key] = child;\n\t    }\n\t  }\n\t\n\t  return map;\n\t};\n\t\n\t\n\t/**\n\t * Retrieves the mapping of key to child node for a given Element, creating it\n\t * if necessary.\n\t * @param {!Element} el\n\t * @return {!Object<string,!Node>} A mapping of keys to child Nodes\n\t */\n\tvar getKeyMap = function(el) {\n\t  var data = getData(el);\n\t\n\t  if (!data.keyMap) {\n\t    data.keyMap = createKeyMap(el);\n\t  }\n\t\n\t  return data.keyMap;\n\t};\n\t\n\t\n\t/**\n\t * Retrieves a child from the parent with the given key.\n\t * @param {!Element} parent\n\t * @param {?string} key\n\t * @return {?Node} The child corresponding to the key.\n\t */\n\tvar getChild = function(parent, key) {\n\t  return getKeyMap(parent)[key];\n\t};\n\t\n\t\n\t/**\n\t * Registers a node as being a child. The parent will keep track of the child\n\t * using the key. The child can be retrieved using the same key using\n\t * getKeyMap. The provided key should be unique within the parent Element.\n\t * @param {!Element} parent The parent of child.\n\t * @param {string} key A key to identify the child with.\n\t * @param {!Node} child The child to register.\n\t */\n\tvar registerChild = function(parent, key, child) {\n\t  getKeyMap(parent)[key] = child;\n\t};\n\t\n\t\n\t/** */\n\tmodule.exports = {\n\t  createNode: createNode,\n\t  getChild: getChild,\n\t  registerChild: registerChild\n\t};\n\t\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS-IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\tvar traversal = __webpack_require__(5),\n\t    firstChild = traversal.firstChild,\n\t    parentNode = traversal.parentNode;\n\tvar TreeWalker = __webpack_require__(20);\n\tvar walker = __webpack_require__(2),\n\t    getWalker = walker.getWalker,\n\t    setWalker = walker.setWalker;\n\t\n\t/**\n\t * @const {boolean}\n\t */\n\tvar IS_PRODUCTION = process.env.NODE_ENV === 'production';\n\t\n\tif (!IS_PRODUCTION) {\n\t  var assertNoUnclosedTags = function(root) {\n\t    var openElement = getWalker().getCurrentParent();\n\t    if (!openElement) {\n\t      return;\n\t    }\n\t\n\t    var openTags = [];\n\t    while (openElement && openElement !== root) {\n\t      openTags.push(openElement.nodeName.toLowerCase());\n\t      openElement = openElement.parentNode;\n\t    }\n\t\n\t    throw new Error('One or more tags were not closed:\\n' +\n\t        openTags.join('\\n'));\n\t  };\n\t}\n\t\n\t\n\t/**\n\t * Patches the document starting at el with the provided function. This function\n\t * may be called during an existing patch operation.\n\t * @param {!Element|!Document} node The Element or Document to patch.\n\t * @param {!function} fn A function containing elementOpen/elementClose/etc.\n\t *     calls that describe the DOM.\n\t * @param {*} data An argument passed to fn to represent DOM state.\n\t */\n\tvar patch = function(node, fn, data) {\n\t  var prevWalker = getWalker();\n\t  setWalker(new TreeWalker(node));\n\t\n\t  firstChild();\n\t  fn(data);\n\t  parentNode();\n\t\n\t  if (!IS_PRODUCTION) {\n\t    assertNoUnclosedTags(node);\n\t  }\n\t\n\t  setWalker(prevWalker);\n\t};\n\t\n\t\n\t/** */\n\tmodule.exports = {\n\t  patch: patch\n\t};\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS-IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t/**\n\t * Similar to the built-in Treewalker class, but simplified and allows direct\n\t * access to modify the currentNode property.\n\t * @param {!Node} node The root Node of the subtree the walker should start\n\t *     traversing.\n\t * @constructor\n\t */\n\tfunction TreeWalker(node) {\n\t  /**\n\t   * Keeps track of the current parent node. This is necessary as the traversal\n\t   * methods may traverse past the last child and we still need a way to get\n\t   * back to the parent.\n\t   * @const @private {!Array<!Node>}\n\t   */\n\t  this.stack_ = [];\n\t\n\t  /** {?Node} */\n\t  this.currentNode = node;\n\t\n\t  /** {!Document} */\n\t  this.doc = node.ownerDocument;\n\t\n\t  /**\n\t   * Keeps track of what namespace to create new Elements in.\n\t   * @const @private {!Array<string>}\n\t   */\n\t  this.nsStack_ = [undefined];\n\t}\n\t\n\t\n\t/**\n\t * @return {!Node} The current parent of the current location in the subtree.\n\t */\n\tTreeWalker.prototype.getCurrentParent = function() {\n\t  return this.stack_[this.stack_.length - 1];\n\t};\n\t\n\t\n\t/**\n\t * @return {string} The current namespace to create Elements in.\n\t */\n\tTreeWalker.prototype.getCurrentNamespace = function() {\n\t  return this.nsStack_[this.nsStack_.length - 1];\n\t};\n\t\n\t\n\t/**\n\t * @param {string} namespace The namespace to enter.\n\t */\n\tTreeWalker.prototype.enterNamespace = function(namespace) {\n\t  this.nsStack_.push(namespace);\n\t};\n\t\n\t\n\t/**\n\t * Exits the current namespace\n\t */\n\tTreeWalker.prototype.exitNamespace = function() {\n\t  this.nsStack_.pop();\n\t};\n\t\n\t\n\t/**\n\t * Changes the current location the firstChild of the current location.\n\t */\n\tTreeWalker.prototype.firstChild = function() {\n\t  this.stack_.push(this.currentNode);\n\t  this.currentNode = this.currentNode.firstChild;\n\t};\n\t\n\t\n\t/**\n\t * Changes the current location the nextSibling of the current location.\n\t */\n\tTreeWalker.prototype.nextSibling = function() {\n\t  this.currentNode = this.currentNode.nextSibling;\n\t};\n\t\n\t\n\t/**\n\t * Changes the current location the parentNode of the current location.\n\t */\n\tTreeWalker.prototype.parentNode = function() {\n\t  this.currentNode = this.stack_.pop();\n\t};\n\t\n\t\n\t/** */\n\tmodule.exports = TreeWalker;\n\t\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS-IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\tvar alignWithDOM = __webpack_require__(6).alignWithDOM;\n\tvar updateAttribute = __webpack_require__(4).updateAttribute;\n\tvar getData = __webpack_require__(1).getData;\n\tvar getWalker = __webpack_require__(2).getWalker;\n\tvar traversal = __webpack_require__(5),\n\t    firstChild = traversal.firstChild,\n\t    nextSibling = traversal.nextSibling,\n\t    parentNode = traversal.parentNode;\n\t\n\t\n\t/**\n\t * The offset in the virtual element declaration where the attributes are\n\t * specified.\n\t * @const\n\t */\n\tvar ATTRIBUTES_OFFSET = 3;\n\t\n\t\n\t/**\n\t * Builds an array of arguments for use with elementOpenStart, attr and\n\t * elementOpenEnd.\n\t * @const {Array<*>}\n\t */\n\tvar argsBuilder = [];\n\t\n\t/**\n\t * @const {boolean}\n\t */\n\tvar IS_PRODUCTION = process.env.NODE_ENV === 'production';\n\t\n\tif (!IS_PRODUCTION) {\n\t  /**\n\t   * Keeps track whether or not we are in an attributes declaration (after\n\t   * elementOpenStart, but before elementOpenEnd).\n\t   * @type {boolean}\n\t   */\n\t  var inAttributes = false;\n\t\n\t\n\t  /** Makes sure that the caller is not where attributes are expected. */\n\t  var assertNotInAttributes = function() {\n\t    if (inAttributes) {\n\t      throw new Error('Was not expecting a call to attr or elementOpenEnd, ' +\n\t          'they must follow a call to elementOpenStart.');\n\t    }\n\t  };\n\t\n\t\n\t  /** Makes sure that the caller is where attributes are expected. */\n\t  var assertInAttributes = function() {\n\t    if (!inAttributes) {\n\t      throw new Error('Was expecting a call to attr or elementOpenEnd. ' +\n\t          'elementOpenStart must be followed by zero or more calls to attr, ' +\n\t          'then one call to elementOpenEnd.');\n\t    }\n\t  };\n\t\n\t\n\t  /**\n\t   * Makes sure that tags are correctly nested.\n\t   * @param {string} tag\n\t   */\n\t  var assertCloseMatchesOpenTag = function(tag) {\n\t    var closingNode = getWalker().getCurrentParent();\n\t    var data = getData(closingNode);\n\t\n\t    if (tag !== data.nodeName) {\n\t      throw new Error('Received a call to close ' + tag + ' but ' +\n\t            data.nodeName + ' was open.');\n\t    }\n\t  };\n\t\n\t\n\t  /** Updates the state to being in an attribute declaration. */\n\t  var setInAttributes = function() {\n\t    inAttributes = true;\n\t  };\n\t\n\t\n\t  /** Updates the state to not being in an attribute declaration. */\n\t  var setNotInAttributes = function() {\n\t    inAttributes = false;\n\t  };\n\t}\n\t\n\t\n\t/**\n\t * Checks to see if one or more attributes have changed for a given\n\t * Element. When no attributes have changed, this function is much faster than\n\t * checking each individual argument. When attributes have changed, the overhead\n\t * of this function is minimal.\n\t *\n\t * This function is called in the context of the Element and the arguments from\n\t * elementOpen-like function so that the arguments are not de-optimized.\n\t *\n\t * @this {Element} The Element to check for changed attributes.\n\t * @param {*} unused1\n\t * @param {*} unused2\n\t * @param {*} unused3\n\t * @param {...*} var_args Attribute name/value pairs of the dynamic attributes\n\t *     for the Element.\n\t * @return {boolean} True if the Element has one or more changed attributes,\n\t *     false otherwise.\n\t */\n\tvar hasChangedAttrs = function(unused1, unused2, unused3, var_args) {\n\t  var data = getData(this);\n\t  var attrsArr = data.attrsArr;\n\t  var attrsChanged = false;\n\t  var i = ATTRIBUTES_OFFSET;\n\t  var j = 0;\n\t\n\t  for (; i < arguments.length; i += 1, j += 1) {\n\t    if (attrsArr[j] !== arguments[i]) {\n\t      attrsChanged = true;\n\t      break;\n\t    }\n\t  }\n\t\n\t  for (; i < arguments.length; i += 1, j += 1) {\n\t    attrsArr[j] = arguments[i];\n\t  }\n\t\n\t  if (j < attrsArr.length) {\n\t    attrsChanged = true;\n\t    attrsArr.length = j;\n\t  }\n\t\n\t  return attrsChanged;\n\t};\n\t\n\t\n\t/**\n\t * Updates the newAttrs object for an Element.\n\t *\n\t * This function is called in the context of the Element and the arguments from\n\t * elementOpen-like function so that the arguments are not de-optimized.\n\t *\n\t * @this {Element} The Element to update newAttrs for.\n\t * @param {*} unused1\n\t * @param {*} unused2\n\t * @param {*} unused3\n\t * @param {...*} var_args Attribute name/value pairs of the dynamic attributes\n\t *     for the Element.\n\t * @return {!Object<string, *>} The updated newAttrs object.\n\t */\n\tvar updateNewAttrs = function(unused1, unused2, unused3, var_args) {\n\t  var node = this;\n\t  var data = getData(node);\n\t  var newAttrs = data.newAttrs;\n\t\n\t  for (var attr in newAttrs) {\n\t    newAttrs[attr] = undefined;\n\t  }\n\t\n\t  for (var i = ATTRIBUTES_OFFSET; i < arguments.length; i += 2) {\n\t    newAttrs[arguments[i]] = arguments[i + 1];\n\t  }\n\t\n\t  return newAttrs;\n\t};\n\t\n\t\n\t/**\n\t * Updates the attributes for a given Element.\n\t * @param {!Element} node\n\t * @param {!Object<string,*>} newAttrs The new attributes for node.\n\t */\n\tvar updateAttributes = function(node, newAttrs) {\n\t  for (var attr in newAttrs) {\n\t    updateAttribute(node, attr, newAttrs[attr]);\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * Declares a virtual Element at the current location in the document. This\n\t * corresponds to an opening tag and a elementClose tag is required.\n\t * @param {string} tag The element's tag.\n\t * @param {?string} key The key used to identify this element. This can be an\n\t *     empty string, but performance may be better if a unique value is used\n\t *     when iterating over an array of items.\n\t * @param {?Array<*>} statics An array of attribute name/value pairs of the\n\t *     static attributes for the Element. These will only be set once when the\n\t *     Element is created.\n\t * @param {...*} var_args Attribute name/value pairs of the dynamic attributes\n\t *     for the Element.\n\t * @return {!Element} The corresponding Element.\n\t */\n\tvar elementOpen = function(tag, key, statics, var_args) {\n\t  if (!IS_PRODUCTION) {\n\t    assertNotInAttributes();\n\t  }\n\t\n\t  var node = alignWithDOM(tag, key, statics);\n\t\n\t  if (hasChangedAttrs.apply(node, arguments)) {\n\t    var newAttrs = updateNewAttrs.apply(node, arguments);\n\t    updateAttributes(node, newAttrs);\n\t  }\n\t\n\t  firstChild();\n\t  return node;\n\t};\n\t\n\t\n\t/**\n\t * Declares a virtual Element at the current location in the document. This\n\t * corresponds to an opening tag and a elementClose tag is required. This is\n\t * like elementOpen, but the attributes are defined using the attr function\n\t * rather than being passed as arguments. Must be folllowed by 0 or more calls\n\t * to attr, then a call to elementOpenEnd.\n\t * @param {string} tag The element's tag.\n\t * @param {?string} key The key used to identify this element. This can be an\n\t *     empty string, but performance may be better if a unique value is used\n\t *     when iterating over an array of items.\n\t * @param {?Array<*>} statics An array of attribute name/value pairs of the\n\t *     static attributes for the Element. These will only be set once when the\n\t *     Element is created.\n\t */\n\tvar elementOpenStart = function(tag, key, statics) {\n\t  if (!IS_PRODUCTION) {\n\t    assertNotInAttributes();\n\t    setInAttributes();\n\t  }\n\t\n\t  argsBuilder[0] = tag;\n\t  argsBuilder[1] = key;\n\t  argsBuilder[2] = statics;\n\t};\n\t\n\t\n\t/***\n\t * Defines a virtual attribute at this point of the DOM. This is only valid\n\t * when called between elementOpenStart and elementOpenEnd.\n\t *\n\t * @param {string} name\n\t * @param {*} value\n\t */\n\tvar attr = function(name, value) {\n\t  if (!IS_PRODUCTION) {\n\t    assertInAttributes();\n\t  }\n\t\n\t  argsBuilder.push(name, value);\n\t};\n\t\n\t\n\t/**\n\t * Closes an open tag started with elementOpenStart.\n\t * @return {!Element} The corresponding Element.\n\t */\n\tvar elementOpenEnd = function() {\n\t  if (!IS_PRODUCTION) {\n\t    assertInAttributes();\n\t    setNotInAttributes();\n\t  }\n\t\n\t  var node = elementOpen.apply(null, argsBuilder);\n\t  argsBuilder.length = 0;\n\t  return node;\n\t};\n\t\n\t\n\t/**\n\t * Closes an open virtual Element.\n\t *\n\t * @param {string} tag The element's tag.\n\t * @return {!Element} The corresponding Element.\n\t */\n\tvar elementClose = function(tag) {\n\t  if (!IS_PRODUCTION) {\n\t    assertNotInAttributes();\n\t    assertCloseMatchesOpenTag(tag);\n\t  }\n\t\n\t  parentNode();\n\t  var node = getWalker().currentNode;\n\t  nextSibling();\n\t  return node;\n\t};\n\t\n\t\n\t/**\n\t * Declares a virtual Element at the current location in the document that has\n\t * no children.\n\t * @param {string} tag The element's tag.\n\t * @param {?string} key The key used to identify this element. This can be an\n\t *     empty string, but performance may be better if a unique value is used\n\t *     when iterating over an array of items.\n\t * @param {?Array<*>} statics An array of attribute name/value pairs of the\n\t *     static attributes for the Element. These will only be set once when the\n\t *     Element is created.\n\t * @param {...*} var_args Attribute name/value pairs of the dynamic attributes\n\t *     for the Element.\n\t * @return {!Element} The corresponding Element.\n\t */\n\tvar elementVoid = function(tag, key, statics, var_args) {\n\t  if (!IS_PRODUCTION) {\n\t    assertNotInAttributes();\n\t  }\n\t\n\t  var node = elementOpen.apply(null, arguments);\n\t  elementClose.apply(null, arguments);\n\t  return node;\n\t};\n\t\n\t\n\t/**\n\t * Declares a virtual Text at this point in the document.\n\t *\n\t * @param {string} value The text of the Text.\n\t */\n\tvar text = function(value) {\n\t  if (!IS_PRODUCTION) {\n\t    assertNotInAttributes();\n\t  }\n\t\n\t  var node = alignWithDOM('#text', null, value);\n\t  var data = getData(node);\n\t\n\t  if (data.text !== value) {\n\t    node.data = value;\n\t    data.text = value;\n\t  }\n\t\n\t  nextSibling();\n\t};\n\t\n\t\n\t/** */\n\tmodule.exports = {\n\t  elementOpenStart: elementOpenStart,\n\t  elementOpenEnd: elementOpenEnd,\n\t  elementOpen: elementOpen,\n\t  elementVoid: elementVoid,\n\t  elementClose: elementClose,\n\t  text: text,\n\t  attr: attr\n\t};\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** main.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap bbc2817cb1ddd31daac5\n **/","/**\n * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * Keeps track of information needed to perform diffs for a given DOM node.\n * @param {?string} nodeName\n * @param {?string} key\n * @constructor\n */\nfunction NodeData(nodeName, key) {\n  /**\n   * The attributes and their values.\n   * @const\n   */\n  this.attrs = {};\n\n  /**\n   * An array of attribute name/value pairs, used for quickly diffing the\n   * incomming attributes to see if the DOM node's attributes need to be\n   * updated.\n   * @const {Array<*>}\n   */\n  this.attrsArr = [];\n\n  /**\n   * The incoming attributes for this Node, before they are updated.\n   * @const {!Object<string, *>}\n   */\n  this.newAttrs = {};\n\n  /**\n   * The key used to identify this node, used to preserve DOM nodes when they\n   * move within their parent.\n   * @const\n   */\n  this.key = key || null;\n\n  /**\n   * Keeps track of children within this node by their key.\n   * {?Object<string, Node>}\n   */\n  this.keyMap = null;\n\n  /**\n   * The last child to have been visited within the current pass.\n   * {?Node}\n   */\n  this.lastVisitedChild = null;\n\n  /**\n   * The node name for this node.\n   * @const\n   */\n  this.nodeName = nodeName;\n\n  /**\n   * @const {string}\n   */\n  this.text = null;\n}\n\n\n/**\n * Initializes a NodeData object for a Node.\n *\n * @param {!Node} node The node to initialize data for.\n * @param {string} nodeName The node name of node.\n * @param {?string} key The key that identifies the node.\n * @return {!NodeData} The newly initialized data object\n */\nvar initData = function(node, nodeName, key) {\n  var data = new NodeData(nodeName, key);\n  node['__incrementalDOMData'] = data;\n  return data;\n};\n\n\n/**\n * Retrieves the NodeData object for a Node, creating it if necessary.\n *\n * @param {!Node} node The node to retrieve the data for.\n * @return {NodeData} The NodeData for this Node.\n */\nvar getData = function(node) {\n  var data = node['__incrementalDOMData'];\n\n  if (!data) {\n    var nodeName = node.nodeName.toLowerCase();\n    var key = null;\n\n    if (node instanceof Element) {\n      key = node.getAttribute('key');\n    }\n\n    data = initData(node, nodeName, key);\n  }\n\n  return data;\n};\n\n\n/**\n * @param {?Node} node A node to get the key for.\n * @return {?string} The key for the Node, if applicable.\n */\nvar getKey = function(node) {\n  return getData(node).key;\n};\n\n\n/**\n * @param {?Node} node A node to get the node name for.\n * @return {?string} The node name for the Node, if applicable.\n */\nvar getNodeName = function(node) {\n  return getData(node).nodeName;\n};\n\n\n/** */\nmodule.exports = {\n  getData: getData,\n  initData: initData,\n  getKey: getKey,\n  getNodeName: getNodeName\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/incremental-dom/src/node_data.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @type {TreeWalker}\n */\nvar walker_;\n\n\n/**\n * @return {TreeWalker} the current TreeWalker\n */\nvar getWalker = function() {\n  return walker_;\n};\n\n\n/**\n * Sets the current TreeWalker\n * @param {TreeWalker} walker\n */\nvar setWalker = function(walker) {\n  walker_ = walker;\n};\n\n\n/** */\nmodule.exports = {\n  getWalker: getWalker,\n  setWalker: setWalker\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/incremental-dom/src/walker.js\n ** module id = 2\n ** module chunks = 0\n **/","/*\n\nStateful components that can decide whether they need to be re-rendered to improve performance.\nThis is a function creates a function that can be called in a render (`IncrementalDOM.patch()`).\n\nExample:\n\n```\n// Using Babel/JSX\nconst Greeter = component({\n  render: props=>\n    <span>Hello {props.name}!</span>,\n\n  shouldUpdate: (props, prevProps)=>\n    props.name !== prevProps.name,\n});\n\nIncremental.patch(rootNode, ()=>{\n  <div>\n    <Greeter name=\"Peter\" />\n  </div>\n});\n\n// ES5/IncrementalDOM (compiled from above)\nvar Greeter = component({\n  render: function render(props) {\n    return (\n      IncrementalDOM.elementOpen(\"span\"),\n        IncrementalDOM.text(\"Hello \"), IncrementalDOM.text(props.name),\n      IncrementalDOM.elementClose(\"span\")\n    );\n  },\n\n  shouldUpdate: function(props, prevProps) {\n    return props.name !== prevProps.name;\n  }\n});\n\nIncremental.patch(rootNode, function () {\n  IncrementalDOM.elementOpen(\"div\"),\n    Greeter({name: \"Peter\"}),\n  IncrementalDOM.elementClose(\"div\");\n});\n```\n\nRequirements:\n\n- Handle initial render\n- Handle parent re-render\n- Handle component re-render (setState called)\n\n*/\nimport {alignWithDOM} from \"incremental-dom/src/alignment.js\";\nimport {getWalker}    from \"incremental-dom/src/walker.js\";\nimport {getData}      from \"incremental-dom/src/node_data.js\";\nimport {nextSibling}  from \"incremental-dom/src/traversal.js\";\n\nconst setPrototypeOf = Object.setPrototypeOf || function(obj, proto){\n  obj.__proto__ = proto; //eslint-disable-line\n  return obj;\n};\n\nconst componentPrototype = {\n  constructor(){},\n  shouldUpdate(){ return true; },\n  render(){},\n\n  setState(newState){\n    this.state = newState;\n    IncrementalDOM.patch(this.node.parentNode, this._rerender);\n  },\n\n  _rerender(){\n    const parentNode = this.node.parentNode;\n    const walker     = getWalker();\n\n    // Skip over all siblings before component's element\n    while(walker.currentNode !== this.node){\n      nextSibling();\n    }\n\n    this._render();\n\n    // Mark the last child as visited so IncrementalDOM\n    // doesn't truncate all sibling elements after the\n    // component's element\n    getData(parentNode).lastVisitedChild = parentNode.lastChild;\n  },\n\n  _render(){\n    this.node = this.render(this.props, this.state, this.setState);\n    this.node.__component = this;\n    return this.node;\n  }\n};\n\nexport default function(spec){\n  function Component(props){\n    this.node      = null;\n    this.props     = props;\n    this._rerender = this._rerender.bind(this);\n    this.constructor(props);\n  }\n\n  Component.prototype = setPrototypeOf(spec, componentPrototype);\n\n  // When rendering a component, we need to determine whether it's one of the following cases:\n  //   - Initial render\n  //   - Re-render\n  //\n  // We can determine this by asking IncrementalDOM whether we're about to render to an existing\n  // node (`alignWithDOM(nodeName, key)`).\n  // The node name isn't known at the time of component declaration, but can be determined on\n  // the very first render.\n  let rootNodeName;\n\n  return props=>{\n    const key = props && props.key;\n\n    // Asking IncrementalDOM whether we are going to be re-rendering an existing component\n    // or rendering a new component.\n    let node      = rootNodeName && alignWithDOM(rootNodeName, key);\n    let component = node && node.__component;\n\n    // Render a new component\n    if(!component){\n      component = new Component(props);\n      rootNodeName = component._render().nodeName.toLowerCase();\n    }\n    // Parent re-render\n    else{\n      const prevProps = component.props;\n      component.props = props;\n      if(component.shouldUpdate(props, prevProps)){\n        component._render();\n      }\n      else{\n        nextSibling();\n      }\n    }\n\n    return component.node;\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/component.js\n **/","/**\n * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar getData = require('./node_data').getData;\n\n\nvar attributes = {\n  /**\n   * Applies an attribute or property to a given Element. If the value is a\n   * object or a function (which includes null), it is set as a property on the\n   * Element. Otherwise, the value is set as an attribute.\n   * @param {!Element} el\n   * @param {string} name The attribute's name.\n   * @param {*} value The attribute's value. If the value is a string, it is set\n   *     as an HTML attribute, otherwise, it is set on node.\n   */\n  applyAttr: function(el, name, value) {\n    var type = typeof value;\n\n    if (type === 'object' || type === 'function') {\n      el[name] = value;\n    } else if (value === undefined) {\n      el.removeAttribute(name);\n    } else {\n      el.setAttribute(name, value);\n    }\n  },\n\n\n  /**\n   * Applies a style to an Element. No vendor prefix expansion is done for\n   * property names/values.\n   * @param {!Element} el\n   * @param {string|Object<string,string>} style The style to set. Either a\n   *     string of css or an object containing property-value pairs.\n   */\n  applyStyle: function(el, style) {\n    if (typeof style === 'string') {\n      el.style.cssText = style;\n    } else {\n      el.style.cssText = '';\n\n      for (var prop in style) {\n        el.style[prop] = style[prop];\n      }\n    }\n  },\n\n\n  /**\n   * Updates a single attribute on an Element.\n   * @param {!Element} el\n   * @param {string} name The attribute's name.\n   * @param {*} value The attribute's value. If the value is a string, it is set\n   *     as an HTML attribute, otherwise, it is set on node.\n   */\n  updateAttribute: function(el, name, value) {\n    var data = getData(el);\n    var attrs = data.attrs;\n\n    if (attrs[name] === value) {\n      return;\n    }\n\n    if (name === 'style') {\n      attributes.applyStyle(el, value);\n    } else {\n      attributes.applyAttr(el, name, value);\n    }\n\n    attrs[name] = value;\n  }\n};\n\n\n/** */\nmodule.exports = attributes;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/incremental-dom/src/attributes.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\n * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar getWalker = require('./walker').getWalker;\nvar getData = require('./node_data').getData;\nvar namespace = require('./namespace');\n\n\n/**\n * Enters a Element, setting the current namespace for nested elements.\n * @param {!Element} node\n */\nvar enterNode = function(node) {\n  var data = getData(node);\n  namespace.enterTag(data.nodeName);\n};\n\n\n/**\n * Clears out any unvisited Nodes, as the corresponding virtual element\n * functions were never called for them, and unwinds the current namespace\n * to the previous value.\n * @param {!Element} node\n */\nvar exitNode = function(node) {\n  var data = getData(node);\n  var lastVisitedChild = data.lastVisitedChild;\n  data.lastVisitedChild = null;\n\n  namespace.exitTag(data.nodeName);\n\n  if (node.lastChild === lastVisitedChild) {\n    return;\n  }\n\n  while (node.lastChild !== lastVisitedChild) {\n    node.removeChild(node.lastChild);\n  }\n\n  // Invalidate the key map since we removed children. It will get recreated\n  // next time we need it.\n  data.keyMap = null;\n};\n\n\n/**\n * Marks node's parent as having visited node.\n * @param {!Node} node\n */\nvar markVisited = function(node) {\n  var walker = getWalker();\n  var parent = walker.getCurrentParent();\n  var data = getData(parent);\n  data.lastVisitedChild = node;\n};\n\n\n/**\n * Changes to the first child of the current node.\n */\nvar firstChild = function() {\n  var walker = getWalker();\n  enterNode(walker.currentNode);\n  walker.firstChild();\n};\n\n\n/**\n * Changes to the next sibling of the current node.\n */\nvar nextSibling = function() {\n  var walker = getWalker();\n  markVisited(walker.currentNode);\n  walker.nextSibling();\n};\n\n\n/**\n * Changes to the parent of the current node, removing any unvisited children.\n */\nvar parentNode = function() {\n  var walker = getWalker();\n  walker.parentNode();\n  exitNode(walker.currentNode);\n};\n\n\n/** */\nmodule.exports = {\n  firstChild: firstChild,\n  nextSibling: nextSibling,\n  parentNode: parentNode\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/incremental-dom/src/traversal.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\n * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar nodes = require('./nodes'),\n    createNode = nodes.createNode,\n    getChild = nodes.getChild,\n    registerChild = nodes.registerChild;\nvar nodeData = require('./node_data'),\n    getKey = nodeData.getKey,\n    getNodeName = nodeData.getNodeName;\nvar getWalker = require('./walker').getWalker;\n\n\n/**\n * Checks whether or not a given node matches the specified nodeName and key.\n *\n * @param {!Node} node An HTML node, typically an HTMLElement or Text.\n * @param {?string} nodeName The nodeName for this node.\n * @param {?string} key An optional key that identifies a node.\n * @return {boolean} True if the node matches, false otherwise.\n */\nvar matches = function(node, nodeName, key) {\n  if (key) {\n    return key === getKey(node);\n  }\n  return nodeName === getNodeName(node);\n};\n\n\n/**\n * Aligns the virtual Element definition with the actual DOM, moving the\n * corresponding DOM node to the correct location or creating it if necessary.\n * @param {?string} nodeName For an Element, this should be a valid tag string.\n *     For a Text, this should be #text.\n * @param {?string} key The key used to identify this element.\n * @param {?Array<*>|string} statics For an Element, this should be an array of\n *     name-value pairs. For a Text, this should be the text content of the\n *     node.\n * @return {!Node} The matching node.\n */\nvar alignWithDOM = function(nodeName, key, statics) {\n  var walker = getWalker();\n  var currentNode = walker.currentNode;\n  var parent = walker.getCurrentParent();\n  var matchingNode;\n\n  // Check to see if we have a node to reuse\n  if (currentNode && matches(currentNode, nodeName, key)) {\n    matchingNode = currentNode;\n  } else {\n    var existingNode = key && getChild(parent, key);\n\n    // Check to see if the node has moved within the parent or if a new one\n    // should be created\n    if (existingNode) {\n      matchingNode = existingNode;\n    } else {\n      matchingNode = createNode(walker.doc, nodeName, key, statics);\n      if (key) {\n        registerChild(parent, key, matchingNode);\n      }\n    }\n\n    parent.insertBefore(matchingNode, currentNode);\n    walker.currentNode = matchingNode;\n  }\n\n  return matchingNode;\n};\n\n\n/** */\nmodule.exports = {\n  alignWithDOM: alignWithDOM\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/incremental-dom/src/alignment.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\n * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar getWalker = require('./walker').getWalker;\n\nvar SVG_NS = 'http://www.w3.org/2000/svg';\n\n/**\n * Enters a tag, checking to see if it is a namespace boundary, and if so,\n * updates the current namespace.\n * @param {string} tag The tag to enter.\n */\nvar enterTag = function(tag) {\n  if (tag === 'svg') {\n    getWalker().enterNamespace(SVG_NS);\n  } else if (tag === 'foreignObject') {\n    getWalker().enterNamespace(undefined);\n  }\n};\n\n\n/**\n * Exits a tag, checking to see if it is a namespace boundary, and if so,\n * updates the current namespace.\n * @param {string} tag The tag to enter.\n */\nvar exitTag = function(tag) {\n  if (tag === 'svg' || tag === 'foreignObject') {\n    getWalker().exitNamespace();\n  }\n};\n\n\n/**\n * Gets the namespace to create an element (of a given tag) in.\n * @param {string} tag The tag to get the namespace for.\n * @return {string} The namespace to create the tag in.\n */\nvar getNamespaceForTag = function(tag) {\n  if (tag === 'svg') {\n    return SVG_NS;\n  }\n\n  return getWalker().getCurrentNamespace();\n};\n\n\n/** */\nmodule.exports = {\n  enterTag: enterTag,\n  exitTag: exitTag,\n  getNamespaceForTag: getNamespaceForTag\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/incremental-dom/src/namespace.js\n ** module id = 7\n ** module chunks = 0\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/node-libs-browser/~/process/browser.js\n ** module id = 8\n ** module chunks = 0\n **/","import \"./App.css\";\n\nimport component      from \"../helpers/component.js\";\nimport RecipeListPage from \"./pages/RecipeListPage.jsx\";\nimport RecipePage     from \"./pages/RecipePage.jsx\";\nimport Recipe         from \"../models/Recipe.js\";\n\nconst PAGE_LIST   = \"List\";\nconst PAGE_RECIPE = \"Recipe\";\nconst ALL_RECIPES = Recipe.query();\n\nexport default component({\n  constructor(props){\n    this.state = {\n      // page           : PAGE_RECIPE,\n      // selectedRecipe : ALL_RECIPES[0]\n\n      page:PAGE_LIST,\n      recipes:ALL_RECIPES\n    };\n  },\n\n  render(props, {page, selectedRecipe, recipes}){\n    return (\n      <div className=\"App\">\n        {page === PAGE_LIST &&\n          <RecipeListPage\n            key=\"APP_RECIPE_LIST_PAGE\"\n            recipes={recipes}\n            onSelect={::this.handleRecipeSelect} />, \"\"}\n        {page === PAGE_RECIPE &&\n          <RecipePage\n            key=\"APP_RECIPE_PAGE\"\n            recipe={selectedRecipe}\n            onClose={::this.handleCloseRecipe} />, \"\"}\n      </div>\n    );\n  },\n\n  handleRecipeSelect(selectedRecipe){\n    this.setState({page:PAGE_RECIPE, selectedRecipe});\n  },\n\n  handleCloseRecipe(){\n    this.setState({page:PAGE_LIST, recipes:Recipe.query()});\n  }\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/App.jsx\n **/","import component from \"../helpers/component.js\";\n\nexport default component({\n  render:({recipes, onSelect})=>\n    <ul className=\"List\">\n      <li className=\"List__item List__item--header\" key=\"RECIPE_HEADER\">\n        Recipes\n      </li>\n      {recipes.forEach(recipe=>\n        <li className=\"List__item\" key={recipe.id}>\n          <a onclick={()=>onSelect(recipe)}>\n            {recipe.title}\n          </a>\n        </li>\n      ), \"\"}\n    </ul>\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/RecipeList.jsx\n **/","import component from \"../../helpers/component.js\";\nimport RecipeList        from \"../RecipeList.jsx\";\n\nexport default component({\n  render:({key, recipes, onSelect})=>\n    <div key={key}>\n      <header className=\"App-toolbar\">\n        Recipes\n        <span className=\"App-toolbar__icon App-toolbar__right-item\">+</span>\n      </header>\n      <section className=\"App-content\">\n        <RecipeList recipes={recipes} onSelect={onSelect} />\n      </section>\n    </div>\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/pages/RecipeListPage.jsx\n **/","import component from \"../../helpers/component.js\";\n\nexport default component({\n  render({key, recipe, onClose}){\n    return (\n      <div key={key}>\n        <header className=\"App-toolbar\">\n          {recipe.title}\n          <a className=\"App-toolbar__icon\" onclick={onClose}>&lt;</a>\n        </header>\n\n        <section className=\"App-content\">\n          <ul className=\"List\">\n            <li className=\"List__item List__item--header\" key=\"RECIPE_INGREDIENTS\">\n              Ingredients\n            </li>\n            {recipe.ingredients.forEach((ingredient, i)=>\n              <li className=\"List__item\" key={ingredient + i}>\n                {ingredient}\n              </li>\n            ), \"\"}\n            <li className=\"List__item\" key=\"RECIPE_ADD_INGREDIENT\">\n              <input\n                placeholder=\"add an ingredient\"\n                onchange={::this.handleAddIngredient} />\n            </li>\n\n            <li className=\"List__item List__item--header\" key=\"RECIPE_DIRECTIONS\">\n              Directions\n            </li>\n            {recipe.directions.forEach((direction, i)=>\n              <li className=\"List__item\" key={direction + i}>\n                {direction}\n              </li>\n            ), \"\"}\n            <li className=\"List__item\" key=\"RECIPE_ADD_DIRECTION\">\n              <input\n                placeholder=\"add a direction\"\n                onchange={::this.handleAddDirection} />\n            </li>\n          </ul>\n        </section>\n      </div>\n    );\n  },\n\n  handleAddIngredient({target}){\n    this.props.recipe.ingredients.push(target.value);\n    target.value = \"\";\n    this.setState();\n  },\n\n  handleAddDirection({target}){\n    this.props.recipe.directions.push(target.value);\n    target.value = \"\";\n    this.setState();\n  }\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/pages/RecipePage.jsx\n **/","import \"./main.css\";\nimport IncrementalDOM from \"incremental-dom\";\nimport App            from \"./components/App.jsx\";\n\nwindow.IncrementalDOM = IncrementalDOM;\nIncrementalDOM.attributes.applyAttr = function(el, name, value){\n  el[name] = value;\n};\nIncrementalDOM.patch(window.APP, App);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","let nextRecipeId = 0;\n\nfunction Recipe({id, title, ingredients, directions}){\n  this.id          = id || ++nextRecipeId;\n  this.title       = title;\n  this.ingredients = ingredients || [];\n  this.directions  = directions || [];\n}\n\nRecipe.query = function(){\n  return [\n    new Recipe({\n      title:\"Sausage Gumbo\",\n      ingredients:[\n        \"1 onion\",\n        \"2 carrots\",\n        \"1 pepper\",\n        \"1 cup chicken stock\",\n        \"1/4 cup flour\"\n      ],\n      directions:[\n        \"Cook the sausages\",\n        \"Move the cooked sausages to the crockpot\",\n        \"Cook the veggies\",\n        \"Add the flour and chicken stock to the veggies\",\n        \"Move the veggies to the crockpot\"\n      ]\n    }),\n    new Recipe({\n      title:\"Broccoli Macaroni\",\n      ingredients:[\n        \"1 broccoli head\",\n        \"1 cup of cheese\",\n        \"1 bundle of noodles\"\n      ],\n      directions:[\n        \"Boil noodles\",\n        \"Move the cooked sausages to the crockpot\",\n        \"Cook the veggies\",\n        \"Add the flour and chicken stock to the veggies\",\n        \"Move the veggies to the crockpot\"\n      ]\n    })\n  ];\n};\n\nexport default Recipe;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/models/Recipe.js\n **/","/**\n * @license\n * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar patch = require('./src/patch').patch;\nvar elements = require('./src/virtual_elements');\nvar attributes = require('./src/attributes');\n\nmodule.exports = {\n  patch: patch,\n  elementVoid: elements.elementVoid,\n  elementOpenStart: elements.elementOpenStart,\n  elementOpenEnd: elements.elementOpenEnd,\n  elementOpen: elements.elementOpen,\n  elementClose: elements.elementClose,\n  text: elements.text,\n  attr: elements.attr,\n  attributes: attributes\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/incremental-dom/index.js\n ** module id = 17\n ** module chunks = 0\n **/","/**\n * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar updateAttribute = require('./attributes').updateAttribute;\nvar nodeData = require('./node_data'),\n    getData = nodeData.getData,\n    getKey = nodeData.getKey,\n    initData = nodeData.initData;\nvar getNamespaceForTag = require('./namespace').getNamespaceForTag;\n\n\n/**\n * Creates an Element.\n * @param {!Document} doc The document with which to create the Element.\n * @param {string} tag The tag for the Element.\n * @param {?string} key A key to identify the Element.\n * @param {?Array<*>} statics An array of attribute name/value pairs of\n *     the static attributes for the Element.\n * @return {!Element}\n */\nvar createElement = function(doc, tag, key, statics) {\n  var namespace = getNamespaceForTag(tag);\n  var el;\n\n  if (namespace) {\n    el = doc.createElementNS(namespace, tag);\n  } else {\n    el = doc.createElement(tag);\n  }\n\n  initData(el, tag, key);\n\n  if (statics) {\n    for (var i = 0; i < statics.length; i += 2) {\n      updateAttribute(el, statics[i], statics[i + 1]);\n    }\n  }\n\n  return el;\n};\n\n/**\n * Creates a Text.\n * @param {!Document} doc The document with which to create the Text.\n * @param {string} text The initial content of the Text.\n * @return {!Text}\n */\nvar createTextNode = function(doc, text) {\n  var node = doc.createTextNode(text);\n  getData(node).text = text;\n\n  return node;\n};\n\n\n/**\n * Creates a Node, either a Text or an Element depending on the node name\n * provided.\n * @param {!Document} doc The document with which to create the Node.\n * @param {string} nodeName The tag if creating an element or #text to create\n *     a Text.\n * @param {?string} key A key to identify the Element.\n * @param {?Array<*>|string} statics The static data to initialize the Node\n *     with. For an Element, an array of attribute name/value pairs of\n *     the static attributes for the Element. For a Text, a string with the\n *     initial content of the Text.\n * @return {!Node}\n */\nvar createNode = function(doc, nodeName, key, statics) {\n  if (nodeName === '#text') {\n    return createTextNode(doc, statics);\n  }\n\n  return createElement(doc, nodeName, key, statics);\n};\n\n\n/**\n * Creates a mapping that can be used to look up children using a key.\n * @param {!Element} el\n * @return {!Object<string, !Node>} A mapping of keys to the children of the\n *     Element.\n */\nvar createKeyMap = function(el) {\n  var map = {};\n  var children = el.children;\n  var count = children.length;\n\n  for (var i = 0; i < count; i += 1) {\n    var child = children[i];\n    var key = getKey(child);\n\n    if (key) {\n      map[key] = child;\n    }\n  }\n\n  return map;\n};\n\n\n/**\n * Retrieves the mapping of key to child node for a given Element, creating it\n * if necessary.\n * @param {!Element} el\n * @return {!Object<string,!Node>} A mapping of keys to child Nodes\n */\nvar getKeyMap = function(el) {\n  var data = getData(el);\n\n  if (!data.keyMap) {\n    data.keyMap = createKeyMap(el);\n  }\n\n  return data.keyMap;\n};\n\n\n/**\n * Retrieves a child from the parent with the given key.\n * @param {!Element} parent\n * @param {?string} key\n * @return {?Node} The child corresponding to the key.\n */\nvar getChild = function(parent, key) {\n  return getKeyMap(parent)[key];\n};\n\n\n/**\n * Registers a node as being a child. The parent will keep track of the child\n * using the key. The child can be retrieved using the same key using\n * getKeyMap. The provided key should be unique within the parent Element.\n * @param {!Element} parent The parent of child.\n * @param {string} key A key to identify the child with.\n * @param {!Node} child The child to register.\n */\nvar registerChild = function(parent, key, child) {\n  getKeyMap(parent)[key] = child;\n};\n\n\n/** */\nmodule.exports = {\n  createNode: createNode,\n  getChild: getChild,\n  registerChild: registerChild\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/incremental-dom/src/nodes.js\n ** module id = 18\n ** module chunks = 0\n **/","/**\n * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar traversal = require('./traversal'),\n    firstChild = traversal.firstChild,\n    parentNode = traversal.parentNode;\nvar TreeWalker = require('./tree_walker');\nvar walker = require('./walker'),\n    getWalker = walker.getWalker,\n    setWalker = walker.setWalker;\n\n/**\n * @const {boolean}\n */\nvar IS_PRODUCTION = process.env.NODE_ENV === 'production';\n\nif (!IS_PRODUCTION) {\n  var assertNoUnclosedTags = function(root) {\n    var openElement = getWalker().getCurrentParent();\n    if (!openElement) {\n      return;\n    }\n\n    var openTags = [];\n    while (openElement && openElement !== root) {\n      openTags.push(openElement.nodeName.toLowerCase());\n      openElement = openElement.parentNode;\n    }\n\n    throw new Error('One or more tags were not closed:\\n' +\n        openTags.join('\\n'));\n  };\n}\n\n\n/**\n * Patches the document starting at el with the provided function. This function\n * may be called during an existing patch operation.\n * @param {!Element|!Document} node The Element or Document to patch.\n * @param {!function} fn A function containing elementOpen/elementClose/etc.\n *     calls that describe the DOM.\n * @param {*} data An argument passed to fn to represent DOM state.\n */\nvar patch = function(node, fn, data) {\n  var prevWalker = getWalker();\n  setWalker(new TreeWalker(node));\n\n  firstChild();\n  fn(data);\n  parentNode();\n\n  if (!IS_PRODUCTION) {\n    assertNoUnclosedTags(node);\n  }\n\n  setWalker(prevWalker);\n};\n\n\n/** */\nmodule.exports = {\n  patch: patch\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/incremental-dom/src/patch.js\n ** module id = 19\n ** module chunks = 0\n **/","/**\n * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Similar to the built-in Treewalker class, but simplified and allows direct\n * access to modify the currentNode property.\n * @param {!Node} node The root Node of the subtree the walker should start\n *     traversing.\n * @constructor\n */\nfunction TreeWalker(node) {\n  /**\n   * Keeps track of the current parent node. This is necessary as the traversal\n   * methods may traverse past the last child and we still need a way to get\n   * back to the parent.\n   * @const @private {!Array<!Node>}\n   */\n  this.stack_ = [];\n\n  /** {?Node} */\n  this.currentNode = node;\n\n  /** {!Document} */\n  this.doc = node.ownerDocument;\n\n  /**\n   * Keeps track of what namespace to create new Elements in.\n   * @const @private {!Array<string>}\n   */\n  this.nsStack_ = [undefined];\n}\n\n\n/**\n * @return {!Node} The current parent of the current location in the subtree.\n */\nTreeWalker.prototype.getCurrentParent = function() {\n  return this.stack_[this.stack_.length - 1];\n};\n\n\n/**\n * @return {string} The current namespace to create Elements in.\n */\nTreeWalker.prototype.getCurrentNamespace = function() {\n  return this.nsStack_[this.nsStack_.length - 1];\n};\n\n\n/**\n * @param {string} namespace The namespace to enter.\n */\nTreeWalker.prototype.enterNamespace = function(namespace) {\n  this.nsStack_.push(namespace);\n};\n\n\n/**\n * Exits the current namespace\n */\nTreeWalker.prototype.exitNamespace = function() {\n  this.nsStack_.pop();\n};\n\n\n/**\n * Changes the current location the firstChild of the current location.\n */\nTreeWalker.prototype.firstChild = function() {\n  this.stack_.push(this.currentNode);\n  this.currentNode = this.currentNode.firstChild;\n};\n\n\n/**\n * Changes the current location the nextSibling of the current location.\n */\nTreeWalker.prototype.nextSibling = function() {\n  this.currentNode = this.currentNode.nextSibling;\n};\n\n\n/**\n * Changes the current location the parentNode of the current location.\n */\nTreeWalker.prototype.parentNode = function() {\n  this.currentNode = this.stack_.pop();\n};\n\n\n/** */\nmodule.exports = TreeWalker;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/incremental-dom/src/tree_walker.js\n ** module id = 20\n ** module chunks = 0\n **/","/**\n * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar alignWithDOM = require('./alignment').alignWithDOM;\nvar updateAttribute = require('./attributes').updateAttribute;\nvar getData = require('./node_data').getData;\nvar getWalker = require('./walker').getWalker;\nvar traversal = require('./traversal'),\n    firstChild = traversal.firstChild,\n    nextSibling = traversal.nextSibling,\n    parentNode = traversal.parentNode;\n\n\n/**\n * The offset in the virtual element declaration where the attributes are\n * specified.\n * @const\n */\nvar ATTRIBUTES_OFFSET = 3;\n\n\n/**\n * Builds an array of arguments for use with elementOpenStart, attr and\n * elementOpenEnd.\n * @const {Array<*>}\n */\nvar argsBuilder = [];\n\n/**\n * @const {boolean}\n */\nvar IS_PRODUCTION = process.env.NODE_ENV === 'production';\n\nif (!IS_PRODUCTION) {\n  /**\n   * Keeps track whether or not we are in an attributes declaration (after\n   * elementOpenStart, but before elementOpenEnd).\n   * @type {boolean}\n   */\n  var inAttributes = false;\n\n\n  /** Makes sure that the caller is not where attributes are expected. */\n  var assertNotInAttributes = function() {\n    if (inAttributes) {\n      throw new Error('Was not expecting a call to attr or elementOpenEnd, ' +\n          'they must follow a call to elementOpenStart.');\n    }\n  };\n\n\n  /** Makes sure that the caller is where attributes are expected. */\n  var assertInAttributes = function() {\n    if (!inAttributes) {\n      throw new Error('Was expecting a call to attr or elementOpenEnd. ' +\n          'elementOpenStart must be followed by zero or more calls to attr, ' +\n          'then one call to elementOpenEnd.');\n    }\n  };\n\n\n  /**\n   * Makes sure that tags are correctly nested.\n   * @param {string} tag\n   */\n  var assertCloseMatchesOpenTag = function(tag) {\n    var closingNode = getWalker().getCurrentParent();\n    var data = getData(closingNode);\n\n    if (tag !== data.nodeName) {\n      throw new Error('Received a call to close ' + tag + ' but ' +\n            data.nodeName + ' was open.');\n    }\n  };\n\n\n  /** Updates the state to being in an attribute declaration. */\n  var setInAttributes = function() {\n    inAttributes = true;\n  };\n\n\n  /** Updates the state to not being in an attribute declaration. */\n  var setNotInAttributes = function() {\n    inAttributes = false;\n  };\n}\n\n\n/**\n * Checks to see if one or more attributes have changed for a given\n * Element. When no attributes have changed, this function is much faster than\n * checking each individual argument. When attributes have changed, the overhead\n * of this function is minimal.\n *\n * This function is called in the context of the Element and the arguments from\n * elementOpen-like function so that the arguments are not de-optimized.\n *\n * @this {Element} The Element to check for changed attributes.\n * @param {*} unused1\n * @param {*} unused2\n * @param {*} unused3\n * @param {...*} var_args Attribute name/value pairs of the dynamic attributes\n *     for the Element.\n * @return {boolean} True if the Element has one or more changed attributes,\n *     false otherwise.\n */\nvar hasChangedAttrs = function(unused1, unused2, unused3, var_args) {\n  var data = getData(this);\n  var attrsArr = data.attrsArr;\n  var attrsChanged = false;\n  var i = ATTRIBUTES_OFFSET;\n  var j = 0;\n\n  for (; i < arguments.length; i += 1, j += 1) {\n    if (attrsArr[j] !== arguments[i]) {\n      attrsChanged = true;\n      break;\n    }\n  }\n\n  for (; i < arguments.length; i += 1, j += 1) {\n    attrsArr[j] = arguments[i];\n  }\n\n  if (j < attrsArr.length) {\n    attrsChanged = true;\n    attrsArr.length = j;\n  }\n\n  return attrsChanged;\n};\n\n\n/**\n * Updates the newAttrs object for an Element.\n *\n * This function is called in the context of the Element and the arguments from\n * elementOpen-like function so that the arguments are not de-optimized.\n *\n * @this {Element} The Element to update newAttrs for.\n * @param {*} unused1\n * @param {*} unused2\n * @param {*} unused3\n * @param {...*} var_args Attribute name/value pairs of the dynamic attributes\n *     for the Element.\n * @return {!Object<string, *>} The updated newAttrs object.\n */\nvar updateNewAttrs = function(unused1, unused2, unused3, var_args) {\n  var node = this;\n  var data = getData(node);\n  var newAttrs = data.newAttrs;\n\n  for (var attr in newAttrs) {\n    newAttrs[attr] = undefined;\n  }\n\n  for (var i = ATTRIBUTES_OFFSET; i < arguments.length; i += 2) {\n    newAttrs[arguments[i]] = arguments[i + 1];\n  }\n\n  return newAttrs;\n};\n\n\n/**\n * Updates the attributes for a given Element.\n * @param {!Element} node\n * @param {!Object<string,*>} newAttrs The new attributes for node.\n */\nvar updateAttributes = function(node, newAttrs) {\n  for (var attr in newAttrs) {\n    updateAttribute(node, attr, newAttrs[attr]);\n  }\n};\n\n\n/**\n * Declares a virtual Element at the current location in the document. This\n * corresponds to an opening tag and a elementClose tag is required.\n * @param {string} tag The element's tag.\n * @param {?string} key The key used to identify this element. This can be an\n *     empty string, but performance may be better if a unique value is used\n *     when iterating over an array of items.\n * @param {?Array<*>} statics An array of attribute name/value pairs of the\n *     static attributes for the Element. These will only be set once when the\n *     Element is created.\n * @param {...*} var_args Attribute name/value pairs of the dynamic attributes\n *     for the Element.\n * @return {!Element} The corresponding Element.\n */\nvar elementOpen = function(tag, key, statics, var_args) {\n  if (!IS_PRODUCTION) {\n    assertNotInAttributes();\n  }\n\n  var node = alignWithDOM(tag, key, statics);\n\n  if (hasChangedAttrs.apply(node, arguments)) {\n    var newAttrs = updateNewAttrs.apply(node, arguments);\n    updateAttributes(node, newAttrs);\n  }\n\n  firstChild();\n  return node;\n};\n\n\n/**\n * Declares a virtual Element at the current location in the document. This\n * corresponds to an opening tag and a elementClose tag is required. This is\n * like elementOpen, but the attributes are defined using the attr function\n * rather than being passed as arguments. Must be folllowed by 0 or more calls\n * to attr, then a call to elementOpenEnd.\n * @param {string} tag The element's tag.\n * @param {?string} key The key used to identify this element. This can be an\n *     empty string, but performance may be better if a unique value is used\n *     when iterating over an array of items.\n * @param {?Array<*>} statics An array of attribute name/value pairs of the\n *     static attributes for the Element. These will only be set once when the\n *     Element is created.\n */\nvar elementOpenStart = function(tag, key, statics) {\n  if (!IS_PRODUCTION) {\n    assertNotInAttributes();\n    setInAttributes();\n  }\n\n  argsBuilder[0] = tag;\n  argsBuilder[1] = key;\n  argsBuilder[2] = statics;\n};\n\n\n/***\n * Defines a virtual attribute at this point of the DOM. This is only valid\n * when called between elementOpenStart and elementOpenEnd.\n *\n * @param {string} name\n * @param {*} value\n */\nvar attr = function(name, value) {\n  if (!IS_PRODUCTION) {\n    assertInAttributes();\n  }\n\n  argsBuilder.push(name, value);\n};\n\n\n/**\n * Closes an open tag started with elementOpenStart.\n * @return {!Element} The corresponding Element.\n */\nvar elementOpenEnd = function() {\n  if (!IS_PRODUCTION) {\n    assertInAttributes();\n    setNotInAttributes();\n  }\n\n  var node = elementOpen.apply(null, argsBuilder);\n  argsBuilder.length = 0;\n  return node;\n};\n\n\n/**\n * Closes an open virtual Element.\n *\n * @param {string} tag The element's tag.\n * @return {!Element} The corresponding Element.\n */\nvar elementClose = function(tag) {\n  if (!IS_PRODUCTION) {\n    assertNotInAttributes();\n    assertCloseMatchesOpenTag(tag);\n  }\n\n  parentNode();\n  var node = getWalker().currentNode;\n  nextSibling();\n  return node;\n};\n\n\n/**\n * Declares a virtual Element at the current location in the document that has\n * no children.\n * @param {string} tag The element's tag.\n * @param {?string} key The key used to identify this element. This can be an\n *     empty string, but performance may be better if a unique value is used\n *     when iterating over an array of items.\n * @param {?Array<*>} statics An array of attribute name/value pairs of the\n *     static attributes for the Element. These will only be set once when the\n *     Element is created.\n * @param {...*} var_args Attribute name/value pairs of the dynamic attributes\n *     for the Element.\n * @return {!Element} The corresponding Element.\n */\nvar elementVoid = function(tag, key, statics, var_args) {\n  if (!IS_PRODUCTION) {\n    assertNotInAttributes();\n  }\n\n  var node = elementOpen.apply(null, arguments);\n  elementClose.apply(null, arguments);\n  return node;\n};\n\n\n/**\n * Declares a virtual Text at this point in the document.\n *\n * @param {string} value The text of the Text.\n */\nvar text = function(value) {\n  if (!IS_PRODUCTION) {\n    assertNotInAttributes();\n  }\n\n  var node = alignWithDOM('#text', null, value);\n  var data = getData(node);\n\n  if (data.text !== value) {\n    node.data = value;\n    data.text = value;\n  }\n\n  nextSibling();\n};\n\n\n/** */\nmodule.exports = {\n  elementOpenStart: elementOpenStart,\n  elementOpenEnd: elementOpenEnd,\n  elementOpen: elementOpen,\n  elementVoid: elementVoid,\n  elementClose: elementClose,\n  text: text,\n  attr: attr\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/incremental-dom/src/virtual_elements.js\n ** module id = 21\n ** module chunks = 0\n **/"],"sourceRoot":""}