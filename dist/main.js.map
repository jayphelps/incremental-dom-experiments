{"version":3,"sources":["webpack:///main.js","webpack:///webpack/bootstrap 7f15b07e094d10b15f7f","webpack:///./src/main.js","webpack:///./~/incremental-dom/index.js","webpack:///./~/incremental-dom/src/patch.js","webpack:///./~/node-libs-browser/~/process/browser.js","webpack:///./~/incremental-dom/src/traversal.js","webpack:///./~/incremental-dom/src/walker.js","webpack:///./~/incremental-dom/src/node_data.js","webpack:///./~/incremental-dom/src/namespace.js","webpack:///./~/incremental-dom/src/tree_walker.js","webpack:///./~/incremental-dom/src/virtual_elements.js","webpack:///./~/incremental-dom/src/alignment.js","webpack:///./~/incremental-dom/src/nodes.js","webpack:///./~/incremental-dom/src/attributes.js","webpack:///./src/components/App.jsx","webpack:///./src/helpers/StatefulComponent.js","webpack:///./src/components/TodoItem.jsx","webpack:///./src/components/TodoFooter.jsx"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_incrementalDom","_incrementalDom2","_componentsAppJsx","_componentsAppJsx2","window","IncrementalDOM","attributes","applyAttr","el","name","value","patch","APP","elements","elementVoid","elementOpenStart","elementOpenEnd","elementOpen","elementClose","text","attr","process","traversal","firstChild","parentNode","TreeWalker","walker","getWalker","setWalker","IS_PRODUCTION","env","NODE_ENV","assertNoUnclosedTags","root","openElement","getCurrentParent","openTags","push","nodeName","toLowerCase","Error","join","node","fn","data","prevWalker","cleanUpNextTick","draining","currentQueue","length","queue","concat","queueIndex","drainQueue","timeout","setTimeout","len","run","clearTimeout","Item","fun","array","this","noop","nextTick","args","Array","arguments","i","prototype","apply","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","getData","namespace","enterNode","enterTag","exitNode","lastVisitedChild","exitTag","lastChild","removeChild","keyMap","markVisited","parent","currentNode","nextSibling","walker_","NodeData","key","attrs","attrsArr","newAttrs","initData","Element","getAttribute","getKey","getNodeName","SVG_NS","tag","enterNamespace","undefined","exitNamespace","getNamespaceForTag","getCurrentNamespace","stack_","doc","ownerDocument","nsStack_","pop","alignWithDOM","updateAttribute","ATTRIBUTES_OFFSET","argsBuilder","inAttributes","assertNotInAttributes","assertInAttributes","assertCloseMatchesOpenTag","closingNode","setInAttributes","setNotInAttributes","hasChangedAttrs","unused1","unused2","unused3","var_args","attrsChanged","j","updateNewAttrs","updateAttributes","statics","nodes","createNode","getChild","registerChild","nodeData","matches","matchingNode","moveNode","existingNode","appendChild","insertBefore","createElement","createElementNS","createTextNode","createKeyMap","map","children","count","child","getKeyMap","type","removeAttribute","setAttribute","applyStyle","style","cssText","prop","Todo","_ref","completed","nextId","handleNewTodoKeyDown","_ref2","which","target","setState","state","handleToggleAll","_ref3","setCompleted","checked","todo","_extends","handleToggle","t","handleDestroy","removeTodo","filter","handleTitleChange","newTitle","handleClearCompleted","getIncompleteCount","todos","incompleteCount","Object","assign","source","hasOwnProperty","_helpersStatefulComponent","_helpersStatefulComponent2","_TodoItemJsx","_TodoItemJsx2","_TodoFooterJsx","_TodoFooterJsx2","INITIAL_TODOS","reduce","props","render","_this","bind","forEach","onTitleChange","onToggle","onDestroy","onClearCompleted","Component","shouldUpdate","_render","_incrementalDomSrcAlignmentJs","_incrementalDomSrcWalkerJs","_incrementalDomSrcNode_dataJs","_incrementalDomSrcTraversalJs","newState","rootNodeName","component","__component","prevProps","console","log","toString","handleBeginEditing","pendingTitle","isEditing","handleEndEditing","handleCommitEdit","handlePendingEditKeydown","e","handled","preventDefault","stopImmediatePropagation","handlePendingEditInput","className"],"mappings":"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","file":"main.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t__webpack_require__(2);\n\t\n\tvar _incrementalDom = __webpack_require__(6);\n\t\n\tvar _incrementalDom2 = _interopRequireDefault(_incrementalDom);\n\t\n\tvar _componentsAppJsx = __webpack_require__(18);\n\t\n\tvar _componentsAppJsx2 = _interopRequireDefault(_componentsAppJsx);\n\t\n\twindow.IncrementalDOM = _incrementalDom2['default'];\n\t_incrementalDom2['default'].attributes.applyAttr = function (el, name, value) {\n\t  el[name] = value;\n\t};\n\t_incrementalDom2['default'].patch(window.APP, _componentsAppJsx2['default']);\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @license\n\t * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS-IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\tvar patch = __webpack_require__(7).patch;\n\tvar elements = __webpack_require__(14);\n\tvar attributes = __webpack_require__(17);\n\t\n\tmodule.exports = {\n\t  patch: patch,\n\t  elementVoid: elements.elementVoid,\n\t  elementOpenStart: elements.elementOpenStart,\n\t  elementOpenEnd: elements.elementOpenEnd,\n\t  elementOpen: elements.elementOpen,\n\t  elementClose: elements.elementClose,\n\t  text: elements.text,\n\t  attr: elements.attr,\n\t  attributes: attributes\n\t};\n\t\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS-IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\tvar traversal = __webpack_require__(9),\n\t    firstChild = traversal.firstChild,\n\t    parentNode = traversal.parentNode;\n\tvar TreeWalker = __webpack_require__(13);\n\tvar walker = __webpack_require__(10),\n\t    getWalker = walker.getWalker,\n\t    setWalker = walker.setWalker;\n\t\n\t/**\n\t * @const {boolean}\n\t */\n\tvar IS_PRODUCTION = process.env.NODE_ENV === 'production';\n\t\n\tif (!IS_PRODUCTION) {\n\t  var assertNoUnclosedTags = function(root) {\n\t    var openElement = getWalker().getCurrentParent();\n\t    if (!openElement) {\n\t      return;\n\t    }\n\t\n\t    var openTags = [];\n\t    while (openElement && openElement !== root) {\n\t      openTags.push(openElement.nodeName.toLowerCase());\n\t      openElement = openElement.parentNode;\n\t    }\n\t\n\t    throw new Error('One or more tags were not closed:\\n' +\n\t        openTags.join('\\n'));\n\t  };\n\t}\n\t\n\t\n\t/**\n\t * Patches the document starting at el with the provided function. This function\n\t * may be called during an existing patch operation.\n\t * @param {!Element|!Document} node The Element or Document to patch.\n\t * @param {!function} fn A function containing elementOpen/elementClose/etc.\n\t *     calls that describe the DOM.\n\t * @param {*} data An argument passed to fn to represent DOM state.\n\t */\n\tvar patch = function(node, fn, data) {\n\t  var prevWalker = getWalker();\n\t  setWalker(new TreeWalker(node));\n\t\n\t  firstChild();\n\t  fn(data);\n\t  parentNode();\n\t\n\t  if (!IS_PRODUCTION) {\n\t    assertNoUnclosedTags(node);\n\t  }\n\t\n\t  setWalker(prevWalker);\n\t};\n\t\n\t\n\t/** */\n\tmodule.exports = {\n\t  patch: patch\n\t};\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = setTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            currentQueue[queueIndex].run();\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    clearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        setTimeout(drainQueue, 0);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\t// TODO(shtylman)\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS-IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\tvar getWalker = __webpack_require__(10).getWalker;\n\tvar getData = __webpack_require__(11).getData;\n\tvar namespace = __webpack_require__(12);\n\t\n\t\n\t/**\n\t * Enters a Element, setting the current namespace for nested elements.\n\t * @param {!Element} node\n\t */\n\tvar enterNode = function(node) {\n\t  var data = getData(node);\n\t  namespace.enterTag(data.nodeName);\n\t};\n\t\n\t\n\t/**\n\t * Clears out any unvisited Nodes, as the corresponding virtual element\n\t * functions were never called for them, and unwinds the current namespace\n\t * to the previous value.\n\t * @param {!Element} node\n\t */\n\tvar exitNode = function(node) {\n\t  var data = getData(node);\n\t  var lastVisitedChild = data.lastVisitedChild;\n\t  data.lastVisitedChild = null;\n\t\n\t  namespace.exitTag(data.nodeName);\n\t\n\t  if (node.lastChild === lastVisitedChild) {\n\t    return;\n\t  }\n\t\n\t  while (node.lastChild !== lastVisitedChild) {\n\t    node.removeChild(node.lastChild);\n\t  }\n\t\n\t  // Invalidate the key map since we removed children. It will get recreated\n\t  // next time we need it.\n\t  data.keyMap = null;\n\t};\n\t\n\t\n\t/**\n\t * Marks node's parent as having visited node.\n\t * @param {!Node} node\n\t */\n\tvar markVisited = function(node) {\n\t  var walker = getWalker();\n\t  var parent = walker.getCurrentParent();\n\t  var data = getData(parent);\n\t  data.lastVisitedChild = node;\n\t};\n\t\n\t\n\t/**\n\t * Changes to the first child of the current node.\n\t */\n\tvar firstChild = function() {\n\t  var walker = getWalker();\n\t  enterNode(walker.currentNode);\n\t  walker.firstChild();\n\t};\n\t\n\t\n\t/**\n\t * Changes to the next sibling of the current node.\n\t */\n\tvar nextSibling = function() {\n\t  var walker = getWalker();\n\t  markVisited(walker.currentNode);\n\t  walker.nextSibling();\n\t};\n\t\n\t\n\t/**\n\t * Changes to the parent of the current node, removing any unvisited children.\n\t */\n\tvar parentNode = function() {\n\t  var walker = getWalker();\n\t  walker.parentNode();\n\t  exitNode(walker.currentNode);\n\t};\n\t\n\t\n\t/** */\n\tmodule.exports = {\n\t  firstChild: firstChild,\n\t  nextSibling: nextSibling,\n\t  parentNode: parentNode\n\t};\n\t\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS-IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t/**\n\t * @type {TreeWalker}\n\t */\n\tvar walker_;\n\t\n\t\n\t/**\n\t * @return {TreeWalker} the current TreeWalker\n\t */\n\tvar getWalker = function() {\n\t  return walker_;\n\t};\n\t\n\t\n\t/**\n\t * Sets the current TreeWalker\n\t * @param {TreeWalker} walker\n\t */\n\tvar setWalker = function(walker) {\n\t  walker_ = walker;\n\t};\n\t\n\t\n\t/** */\n\tmodule.exports = {\n\t  getWalker: getWalker,\n\t  setWalker: setWalker\n\t};\n\t\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS-IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t\n\t/**\n\t * Keeps track of information needed to perform diffs for a given DOM node.\n\t * @param {?string} nodeName\n\t * @param {?string} key\n\t * @constructor\n\t */\n\tfunction NodeData(nodeName, key) {\n\t  /**\n\t   * The attributes and their values.\n\t   * @const\n\t   */\n\t  this.attrs = {};\n\t\n\t  /**\n\t   * An array of attribute name/value pairs, used for quickly diffing the\n\t   * incomming attributes to see if the DOM node's attributes need to be\n\t   * updated.\n\t   * @const {Array<*>}\n\t   */\n\t  this.attrsArr = [];\n\t\n\t  /**\n\t   * The incoming attributes for this Node, before they are updated.\n\t   * @const {!Object<string, *>}\n\t   */\n\t  this.newAttrs = {};\n\t\n\t  /**\n\t   * The key used to identify this node, used to preserve DOM nodes when they\n\t   * move within their parent.\n\t   * @const\n\t   */\n\t  this.key = key || null;\n\t\n\t  /**\n\t   * Keeps track of children within this node by their key.\n\t   * {?Object<string, Node>}\n\t   */\n\t  this.keyMap = null;\n\t\n\t  /**\n\t   * The last child to have been visited within the current pass.\n\t   * {?Node}\n\t   */\n\t  this.lastVisitedChild = null;\n\t\n\t  /**\n\t   * The node name for this node.\n\t   * @const\n\t   */\n\t  this.nodeName = nodeName;\n\t\n\t  /**\n\t   * @const {string}\n\t   */\n\t  this.text = null;\n\t}\n\t\n\t\n\t/**\n\t * Initializes a NodeData object for a Node.\n\t *\n\t * @param {!Node} node The node to initialize data for.\n\t * @param {string} nodeName The node name of node.\n\t * @param {?string} key The key that identifies the node.\n\t * @return {!NodeData} The newly initialized data object\n\t */\n\tvar initData = function(node, nodeName, key) {\n\t  var data = new NodeData(nodeName, key);\n\t  node['__incrementalDOMData'] = data;\n\t  return data;\n\t};\n\t\n\t\n\t/**\n\t * Retrieves the NodeData object for a Node, creating it if necessary.\n\t *\n\t * @param {!Node} node The node to retrieve the data for.\n\t * @return {NodeData} The NodeData for this Node.\n\t */\n\tvar getData = function(node) {\n\t  var data = node['__incrementalDOMData'];\n\t\n\t  if (!data) {\n\t    var nodeName = node.nodeName.toLowerCase();\n\t    var key = null;\n\t\n\t    if (node instanceof Element) {\n\t      key = node.getAttribute('key');\n\t    }\n\t\n\t    data = initData(node, nodeName, key);\n\t  }\n\t\n\t  return data;\n\t};\n\t\n\t\n\t/**\n\t * @param {?Node} node A node to get the key for.\n\t * @return {?string} The key for the Node, if applicable.\n\t */\n\tvar getKey = function(node) {\n\t  return getData(node).key;\n\t};\n\t\n\t\n\t/**\n\t * @param {?Node} node A node to get the node name for.\n\t * @return {?string} The node name for the Node, if applicable.\n\t */\n\tvar getNodeName = function(node) {\n\t  return getData(node).nodeName;\n\t};\n\t\n\t\n\t/** */\n\tmodule.exports = {\n\t  getData: getData,\n\t  initData: initData,\n\t  getKey: getKey,\n\t  getNodeName: getNodeName\n\t};\n\t\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS-IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\tvar getWalker = __webpack_require__(10).getWalker;\n\t\n\tvar SVG_NS = 'http://www.w3.org/2000/svg';\n\t\n\t/**\n\t * Enters a tag, checking to see if it is a namespace boundary, and if so,\n\t * updates the current namespace.\n\t * @param {string} tag The tag to enter.\n\t */\n\tvar enterTag = function(tag) {\n\t  if (tag === 'svg') {\n\t    getWalker().enterNamespace(SVG_NS);\n\t  } else if (tag === 'foreignObject') {\n\t    getWalker().enterNamespace(undefined);\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * Exits a tag, checking to see if it is a namespace boundary, and if so,\n\t * updates the current namespace.\n\t * @param {string} tag The tag to enter.\n\t */\n\tvar exitTag = function(tag) {\n\t  if (tag === 'svg' || tag === 'foreignObject') {\n\t    getWalker().exitNamespace();\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * Gets the namespace to create an element (of a given tag) in.\n\t * @param {string} tag The tag to get the namespace for.\n\t * @return {string} The namespace to create the tag in.\n\t */\n\tvar getNamespaceForTag = function(tag) {\n\t  if (tag === 'svg') {\n\t    return SVG_NS;\n\t  }\n\t\n\t  return getWalker().getCurrentNamespace();\n\t};\n\t\n\t\n\t/** */\n\tmodule.exports = {\n\t  enterTag: enterTag,\n\t  exitTag: exitTag,\n\t  getNamespaceForTag: getNamespaceForTag\n\t};\n\t\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS-IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t/**\n\t * Similar to the built-in Treewalker class, but simplified and allows direct\n\t * access to modify the currentNode property.\n\t * @param {!Node} node The root Node of the subtree the walker should start\n\t *     traversing.\n\t * @constructor\n\t */\n\tfunction TreeWalker(node) {\n\t  /**\n\t   * Keeps track of the current parent node. This is necessary as the traversal\n\t   * methods may traverse past the last child and we still need a way to get\n\t   * back to the parent.\n\t   * @const @private {!Array<!Node>}\n\t   */\n\t  this.stack_ = [];\n\t\n\t  /** {?Node} */\n\t  this.currentNode = node;\n\t\n\t  /** {!Document} */\n\t  this.doc = node.ownerDocument;\n\t\n\t  /**\n\t   * Keeps track of what namespace to create new Elements in.\n\t   * @const @private {!Array<string>}\n\t   */\n\t  this.nsStack_ = [undefined];\n\t}\n\t\n\t\n\t/**\n\t * @return {!Node} The current parent of the current location in the subtree.\n\t */\n\tTreeWalker.prototype.getCurrentParent = function() {\n\t  return this.stack_[this.stack_.length - 1];\n\t};\n\t\n\t\n\t/**\n\t * @return {string} The current namespace to create Elements in.\n\t */\n\tTreeWalker.prototype.getCurrentNamespace = function() {\n\t  return this.nsStack_[this.nsStack_.length - 1];\n\t};\n\t\n\t\n\t/**\n\t * @param {string} namespace The namespace to enter.\n\t */\n\tTreeWalker.prototype.enterNamespace = function(namespace) {\n\t  this.nsStack_.push(namespace);\n\t};\n\t\n\t\n\t/**\n\t * Exits the current namespace\n\t */\n\tTreeWalker.prototype.exitNamespace = function() {\n\t  this.nsStack_.pop();\n\t};\n\t\n\t\n\t/**\n\t * Changes the current location the firstChild of the current location.\n\t */\n\tTreeWalker.prototype.firstChild = function() {\n\t  this.stack_.push(this.currentNode);\n\t  this.currentNode = this.currentNode.firstChild;\n\t};\n\t\n\t\n\t/**\n\t * Changes the current location the nextSibling of the current location.\n\t */\n\tTreeWalker.prototype.nextSibling = function() {\n\t  this.currentNode = this.currentNode.nextSibling;\n\t};\n\t\n\t\n\t/**\n\t * Changes the current location the parentNode of the current location.\n\t */\n\tTreeWalker.prototype.parentNode = function() {\n\t  this.currentNode = this.stack_.pop();\n\t};\n\t\n\t\n\t/** */\n\tmodule.exports = TreeWalker;\n\t\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS-IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\tvar alignWithDOM = __webpack_require__(15).alignWithDOM;\n\tvar updateAttribute = __webpack_require__(17).updateAttribute;\n\tvar getData = __webpack_require__(11).getData;\n\tvar getWalker = __webpack_require__(10).getWalker;\n\tvar traversal = __webpack_require__(9),\n\t    firstChild = traversal.firstChild,\n\t    nextSibling = traversal.nextSibling,\n\t    parentNode = traversal.parentNode;\n\t\n\t\n\t/**\n\t * The offset in the virtual element declaration where the attributes are\n\t * specified.\n\t * @const\n\t */\n\tvar ATTRIBUTES_OFFSET = 3;\n\t\n\t\n\t/**\n\t * Builds an array of arguments for use with elementOpenStart, attr and\n\t * elementOpenEnd.\n\t * @const {Array<*>}\n\t */\n\tvar argsBuilder = [];\n\t\n\t/**\n\t * @const {boolean}\n\t */\n\tvar IS_PRODUCTION = process.env.NODE_ENV === 'production';\n\t\n\tif (!IS_PRODUCTION) {\n\t  /**\n\t   * Keeps track whether or not we are in an attributes declaration (after\n\t   * elementOpenStart, but before elementOpenEnd).\n\t   * @type {boolean}\n\t   */\n\t  var inAttributes = false;\n\t\n\t\n\t  /** Makes sure that the caller is not where attributes are expected. */\n\t  var assertNotInAttributes = function() {\n\t    if (inAttributes) {\n\t      throw new Error('Was not expecting a call to attr or elementOpenEnd, ' +\n\t          'they must follow a call to elementOpenStart.');\n\t    }\n\t  };\n\t\n\t\n\t  /** Makes sure that the caller is where attributes are expected. */\n\t  var assertInAttributes = function() {\n\t    if (!inAttributes) {\n\t      throw new Error('Was expecting a call to attr or elementOpenEnd. ' +\n\t          'elementOpenStart must be followed by zero or more calls to attr, ' +\n\t          'then one call to elementOpenEnd.');\n\t    }\n\t  };\n\t\n\t\n\t  /**\n\t   * Makes sure that tags are correctly nested.\n\t   * @param {string} tag\n\t   */\n\t  var assertCloseMatchesOpenTag = function(tag) {\n\t    var closingNode = getWalker().getCurrentParent();\n\t    var data = getData(closingNode);\n\t\n\t    if (tag !== data.nodeName) {\n\t      throw new Error('Received a call to close ' + tag + ' but ' +\n\t            data.nodeName + ' was open.');\n\t    }\n\t  };\n\t\n\t\n\t  /** Updates the state to being in an attribute declaration. */\n\t  var setInAttributes = function() {\n\t    inAttributes = true;\n\t  };\n\t\n\t\n\t  /** Updates the state to not being in an attribute declaration. */\n\t  var setNotInAttributes = function() {\n\t    inAttributes = false;\n\t  };\n\t}\n\t\n\t\n\t/**\n\t * Checks to see if one or more attributes have changed for a given\n\t * Element. When no attributes have changed, this function is much faster than\n\t * checking each individual argument. When attributes have changed, the overhead\n\t * of this function is minimal.\n\t *\n\t * This function is called in the context of the Element and the arguments from\n\t * elementOpen-like function so that the arguments are not de-optimized.\n\t *\n\t * @this {Element} The Element to check for changed attributes.\n\t * @param {*} unused1\n\t * @param {*} unused2\n\t * @param {*} unused3\n\t * @param {...*} var_args Attribute name/value pairs of the dynamic attributes\n\t *     for the Element.\n\t * @return {boolean} True if the Element has one or more changed attributes,\n\t *     false otherwise.\n\t */\n\tvar hasChangedAttrs = function(unused1, unused2, unused3, var_args) {\n\t  var data = getData(this);\n\t  var attrsArr = data.attrsArr;\n\t  var attrsChanged = false;\n\t  var i = ATTRIBUTES_OFFSET;\n\t  var j = 0;\n\t\n\t  for (; i < arguments.length; i += 1, j += 1) {\n\t    if (attrsArr[j] !== arguments[i]) {\n\t      attrsChanged = true;\n\t      break;\n\t    }\n\t  }\n\t\n\t  for (; i < arguments.length; i += 1, j += 1) {\n\t    attrsArr[j] = arguments[i];\n\t  }\n\t\n\t  if (j < attrsArr.length) {\n\t    attrsChanged = true;\n\t    attrsArr.length = j;\n\t  }\n\t\n\t  return attrsChanged;\n\t};\n\t\n\t\n\t/**\n\t * Updates the newAttrs object for an Element.\n\t *\n\t * This function is called in the context of the Element and the arguments from\n\t * elementOpen-like function so that the arguments are not de-optimized.\n\t *\n\t * @this {Element} The Element to update newAttrs for.\n\t * @param {*} unused1\n\t * @param {*} unused2\n\t * @param {*} unused3\n\t * @param {...*} var_args Attribute name/value pairs of the dynamic attributes\n\t *     for the Element.\n\t * @return {!Object<string, *>} The updated newAttrs object.\n\t */\n\tvar updateNewAttrs = function(unused1, unused2, unused3, var_args) {\n\t  var node = this;\n\t  var data = getData(node);\n\t  var newAttrs = data.newAttrs;\n\t\n\t  for (var attr in newAttrs) {\n\t    newAttrs[attr] = undefined;\n\t  }\n\t\n\t  for (var i = ATTRIBUTES_OFFSET; i < arguments.length; i += 2) {\n\t    newAttrs[arguments[i]] = arguments[i + 1];\n\t  }\n\t\n\t  return newAttrs;\n\t};\n\t\n\t\n\t/**\n\t * Updates the attributes for a given Element.\n\t * @param {!Element} node\n\t * @param {!Object<string,*>} newAttrs The new attributes for node.\n\t */\n\tvar updateAttributes = function(node, newAttrs) {\n\t  for (var attr in newAttrs) {\n\t    updateAttribute(node, attr, newAttrs[attr]);\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * Declares a virtual Element at the current location in the document. This\n\t * corresponds to an opening tag and a elementClose tag is required.\n\t * @param {string} tag The element's tag.\n\t * @param {?string} key The key used to identify this element. This can be an\n\t *     empty string, but performance may be better if a unique value is used\n\t *     when iterating over an array of items.\n\t * @param {?Array<*>} statics An array of attribute name/value pairs of the\n\t *     static attributes for the Element. These will only be set once when the\n\t *     Element is created.\n\t * @param {...*} var_args Attribute name/value pairs of the dynamic attributes\n\t *     for the Element.\n\t * @return {!Element} The corresponding Element.\n\t */\n\tvar elementOpen = function(tag, key, statics, var_args) {\n\t  if (!IS_PRODUCTION) {\n\t    assertNotInAttributes();\n\t  }\n\t\n\t  var node = alignWithDOM(tag, key, statics);\n\t\n\t  if (hasChangedAttrs.apply(node, arguments)) {\n\t    var newAttrs = updateNewAttrs.apply(node, arguments);\n\t    updateAttributes(node, newAttrs);\n\t  }\n\t\n\t  firstChild();\n\t  return node;\n\t};\n\t\n\t\n\t/**\n\t * Declares a virtual Element at the current location in the document. This\n\t * corresponds to an opening tag and a elementClose tag is required. This is\n\t * like elementOpen, but the attributes are defined using the attr function\n\t * rather than being passed as arguments. Must be folllowed by 0 or more calls\n\t * to attr, then a call to elementOpenEnd.\n\t * @param {string} tag The element's tag.\n\t * @param {?string} key The key used to identify this element. This can be an\n\t *     empty string, but performance may be better if a unique value is used\n\t *     when iterating over an array of items.\n\t * @param {?Array<*>} statics An array of attribute name/value pairs of the\n\t *     static attributes for the Element. These will only be set once when the\n\t *     Element is created.\n\t */\n\tvar elementOpenStart = function(tag, key, statics) {\n\t  if (!IS_PRODUCTION) {\n\t    assertNotInAttributes();\n\t    setInAttributes();\n\t  }\n\t\n\t  argsBuilder[0] = tag;\n\t  argsBuilder[1] = key;\n\t  argsBuilder[2] = statics;\n\t};\n\t\n\t\n\t/***\n\t * Defines a virtual attribute at this point of the DOM. This is only valid\n\t * when called between elementOpenStart and elementOpenEnd.\n\t *\n\t * @param {string} name\n\t * @param {*} value\n\t */\n\tvar attr = function(name, value) {\n\t  if (!IS_PRODUCTION) {\n\t    assertInAttributes();\n\t  }\n\t\n\t  argsBuilder.push(name, value);\n\t};\n\t\n\t\n\t/**\n\t * Closes an open tag started with elementOpenStart.\n\t * @return {!Element} The corresponding Element.\n\t */\n\tvar elementOpenEnd = function() {\n\t  if (!IS_PRODUCTION) {\n\t    assertInAttributes();\n\t    setNotInAttributes();\n\t  }\n\t\n\t  var node = elementOpen.apply(null, argsBuilder);\n\t  argsBuilder.length = 0;\n\t  return node;\n\t};\n\t\n\t\n\t/**\n\t * Closes an open virtual Element.\n\t *\n\t * @param {string} tag The element's tag.\n\t * @return {!Element} The corresponding Element.\n\t */\n\tvar elementClose = function(tag) {\n\t  if (!IS_PRODUCTION) {\n\t    assertNotInAttributes();\n\t    assertCloseMatchesOpenTag(tag);\n\t  }\n\t\n\t  parentNode();\n\t  var node = getWalker().currentNode;\n\t  nextSibling();\n\t  return node;\n\t};\n\t\n\t\n\t/**\n\t * Declares a virtual Element at the current location in the document that has\n\t * no children.\n\t * @param {string} tag The element's tag.\n\t * @param {?string} key The key used to identify this element. This can be an\n\t *     empty string, but performance may be better if a unique value is used\n\t *     when iterating over an array of items.\n\t * @param {?Array<*>} statics An array of attribute name/value pairs of the\n\t *     static attributes for the Element. These will only be set once when the\n\t *     Element is created.\n\t * @param {...*} var_args Attribute name/value pairs of the dynamic attributes\n\t *     for the Element.\n\t * @return {!Element} The corresponding Element.\n\t */\n\tvar elementVoid = function(tag, key, statics, var_args) {\n\t  if (!IS_PRODUCTION) {\n\t    assertNotInAttributes();\n\t  }\n\t\n\t  var node = elementOpen.apply(null, arguments);\n\t  elementClose.apply(null, arguments);\n\t  return node;\n\t};\n\t\n\t\n\t/**\n\t * Declares a virtual Text at this point in the document.\n\t *\n\t * @param {string} value The text of the Text.\n\t */\n\tvar text = function(value) {\n\t  if (!IS_PRODUCTION) {\n\t    assertNotInAttributes();\n\t  }\n\t\n\t  var node = alignWithDOM('#text', null, value);\n\t  var data = getData(node);\n\t\n\t  if (data.text !== value) {\n\t    node.data = value;\n\t    data.text = value;\n\t  }\n\t\n\t  nextSibling();\n\t};\n\t\n\t\n\t/** */\n\tmodule.exports = {\n\t  elementOpenStart: elementOpenStart,\n\t  elementOpenEnd: elementOpenEnd,\n\t  elementOpen: elementOpen,\n\t  elementVoid: elementVoid,\n\t  elementClose: elementClose,\n\t  text: text,\n\t  attr: attr\n\t};\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS-IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\tvar nodes = __webpack_require__(16),\n\t    createNode = nodes.createNode,\n\t    getChild = nodes.getChild,\n\t    registerChild = nodes.registerChild;\n\tvar nodeData = __webpack_require__(11),\n\t    getKey = nodeData.getKey,\n\t    getNodeName = nodeData.getNodeName;\n\tvar getWalker = __webpack_require__(10).getWalker;\n\t\n\t\n\t/**\n\t * Checks whether or not a given node matches the specified nodeName and key.\n\t *\n\t * @param {!Node} node An HTML node, typically an HTMLElement or Text.\n\t * @param {?string} nodeName The nodeName for this node.\n\t * @param {?string} key An optional key that identifies a node.\n\t * @return {boolean} True if the node matches, false otherwise.\n\t */\n\tvar matches = function(node, nodeName, key) {\n\t  if (key) {\n\t    return key === getKey(node);\n\t  }\n\t  return nodeName === getNodeName(node);\n\t};\n\t\n\t\n\t/**\n\t * Aligns the virtual Element definition with the actual DOM, moving the\n\t * corresponding DOM node to the correct location or creating it if necessary.\n\t * @param {?string} nodeName For an Element, this should be a valid tag string.\n\t *     For a Text, this should be #text.\n\t * @param {?string} key The key used to identify this element.\n\t * @param {?Array<*>|string} statics For an Element, this should be an array of\n\t *     name-value pairs. For a Text, this should be the text content of the\n\t *     node.\n\t * @return {!Node} The matching node.\n\t */\n\tvar alignWithDOM = function(nodeName, key, statics) {\n\t  var walker = getWalker();\n\t  var currentNode = walker.currentNode;\n\t  var parent = walker.getCurrentParent();\n\t  var matchingNode, moveNode;\n\t\n\t  // Check to see if we have a node to reuse\n\t  if (currentNode && matches(currentNode, nodeName, key)) {\n\t    matchingNode = currentNode;\n\t  } else {\n\t    var existingNode = key && getChild(parent, key);\n\t\n\t    // Check to see if the node has moved within the parent or if a new one\n\t    // should be created\n\t    if (existingNode) {\n\t      matchingNode = existingNode;\n\t\n\t      // Move all nodes before the matchingNode to the end\n\t      while(matchingNode !== walker.currentNode) {\n\t        moveNode = walker.currentNode;\n\t        walker.nextSibling();\n\t        parent.appendChild(moveNode);\n\t      }\n\t    } else {\n\t      matchingNode = createNode(walker.doc, nodeName, key, statics);\n\t      if (key) {\n\t        registerChild(parent, key, matchingNode);\n\t      }\n\t      parent.insertBefore(matchingNode, currentNode);\n\t      walker.currentNode = matchingNode;\n\t    }\n\t  }\n\t\n\t  return matchingNode;\n\t};\n\t\n\t\n\t/** */\n\tmodule.exports = {\n\t  alignWithDOM: alignWithDOM\n\t};\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS-IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\tvar updateAttribute = __webpack_require__(17).updateAttribute;\n\tvar nodeData = __webpack_require__(11),\n\t    getData = nodeData.getData,\n\t    getKey = nodeData.getKey,\n\t    initData = nodeData.initData;\n\tvar getNamespaceForTag = __webpack_require__(12).getNamespaceForTag;\n\t\n\t\n\t/**\n\t * Creates an Element.\n\t * @param {!Document} doc The document with which to create the Element.\n\t * @param {string} tag The tag for the Element.\n\t * @param {?string} key A key to identify the Element.\n\t * @param {?Array<*>} statics An array of attribute name/value pairs of\n\t *     the static attributes for the Element.\n\t * @return {!Element}\n\t */\n\tvar createElement = function(doc, tag, key, statics) {\n\t  var namespace = getNamespaceForTag(tag);\n\t  var el;\n\t\n\t  if (namespace) {\n\t    el = doc.createElementNS(namespace, tag);\n\t  } else {\n\t    el = doc.createElement(tag);\n\t  }\n\t\n\t  initData(el, tag, key);\n\t\n\t  if (statics) {\n\t    for (var i = 0; i < statics.length; i += 2) {\n\t      updateAttribute(el, statics[i], statics[i + 1]);\n\t    }\n\t  }\n\t\n\t  return el;\n\t};\n\t\n\t/**\n\t * Creates a Text.\n\t * @param {!Document} doc The document with which to create the Text.\n\t * @param {string} text The initial content of the Text.\n\t * @return {!Text}\n\t */\n\tvar createTextNode = function(doc, text) {\n\t  var node = doc.createTextNode(text);\n\t  getData(node).text = text;\n\t\n\t  return node;\n\t};\n\t\n\t\n\t/**\n\t * Creates a Node, either a Text or an Element depending on the node name\n\t * provided.\n\t * @param {!Document} doc The document with which to create the Node.\n\t * @param {string} nodeName The tag if creating an element or #text to create\n\t *     a Text.\n\t * @param {?string} key A key to identify the Element.\n\t * @param {?Array<*>|string} statics The static data to initialize the Node\n\t *     with. For an Element, an array of attribute name/value pairs of\n\t *     the static attributes for the Element. For a Text, a string with the\n\t *     initial content of the Text.\n\t * @return {!Node}\n\t */\n\tvar createNode = function(doc, nodeName, key, statics) {\n\t  if (nodeName === '#text') {\n\t    return createTextNode(doc, statics);\n\t  }\n\t\n\t  return createElement(doc, nodeName, key, statics);\n\t};\n\t\n\t\n\t/**\n\t * Creates a mapping that can be used to look up children using a key.\n\t * @param {!Element} el\n\t * @return {!Object<string, !Node>} A mapping of keys to the children of the\n\t *     Element.\n\t */\n\tvar createKeyMap = function(el) {\n\t  var map = {};\n\t  var children = el.children;\n\t  var count = children.length;\n\t\n\t  for (var i = 0; i < count; i += 1) {\n\t    var child = children[i];\n\t    var key = getKey(child);\n\t\n\t    if (key) {\n\t      map[key] = child;\n\t    }\n\t  }\n\t\n\t  return map;\n\t};\n\t\n\t\n\t/**\n\t * Retrieves the mapping of key to child node for a given Element, creating it\n\t * if necessary.\n\t * @param {!Element} el\n\t * @return {!Object<string,!Node>} A mapping of keys to child Nodes\n\t */\n\tvar getKeyMap = function(el) {\n\t  var data = getData(el);\n\t\n\t  if (!data.keyMap) {\n\t    data.keyMap = createKeyMap(el);\n\t  }\n\t\n\t  return data.keyMap;\n\t};\n\t\n\t\n\t/**\n\t * Retrieves a child from the parent with the given key.\n\t * @param {!Element} parent\n\t * @param {?string} key\n\t * @return {?Node} The child corresponding to the key.\n\t */\n\tvar getChild = function(parent, key) {\n\t  return getKeyMap(parent)[key];\n\t};\n\t\n\t\n\t/**\n\t * Registers a node as being a child. The parent will keep track of the child\n\t * using the key. The child can be retrieved using the same key using\n\t * getKeyMap. The provided key should be unique within the parent Element.\n\t * @param {!Element} parent The parent of child.\n\t * @param {string} key A key to identify the child with.\n\t * @param {!Node} child The child to register.\n\t */\n\tvar registerChild = function(parent, key, child) {\n\t  getKeyMap(parent)[key] = child;\n\t};\n\t\n\t\n\t/** */\n\tmodule.exports = {\n\t  createNode: createNode,\n\t  getChild: getChild,\n\t  registerChild: registerChild\n\t};\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS-IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\tvar getData = __webpack_require__(11).getData;\n\t\n\t\n\tvar attributes = {\n\t  /**\n\t   * Applies an attribute or property to a given Element. If the value is a\n\t   * object or a function (which includes null), it is set as a property on the\n\t   * Element. Otherwise, the value is set as an attribute.\n\t   * @param {!Element} el\n\t   * @param {string} name The attribute's name.\n\t   * @param {*} value The attribute's value. If the value is a string, it is set\n\t   *     as an HTML attribute, otherwise, it is set on node.\n\t   */\n\t  applyAttr: function(el, name, value) {\n\t    var type = typeof value;\n\t\n\t    if (type === 'object' || type === 'function') {\n\t      el[name] = value;\n\t    } else if (value === undefined) {\n\t      el.removeAttribute(name);\n\t    } else {\n\t      el.setAttribute(name, value);\n\t    }\n\t  },\n\t\n\t\n\t  /**\n\t   * Applies a style to an Element. No vendor prefix expansion is done for\n\t   * property names/values.\n\t   * @param {!Element} el\n\t   * @param {string|Object<string,string>} style The style to set. Either a\n\t   *     string of css or an object containing property-value pairs.\n\t   */\n\t  applyStyle: function(el, style) {\n\t    if (typeof style === 'string') {\n\t      el.style.cssText = style;\n\t    } else {\n\t      el.style.cssText = '';\n\t\n\t      for (var prop in style) {\n\t        el.style[prop] = style[prop];\n\t      }\n\t    }\n\t  },\n\t\n\t\n\t  /**\n\t   * Updates a single attribute on an Element.\n\t   * @param {!Element} el\n\t   * @param {string} name The attribute's name.\n\t   * @param {*} value The attribute's value. If the value is a string, it is set\n\t   *     as an HTML attribute, otherwise, it is set on node.\n\t   */\n\t  updateAttribute: function(el, name, value) {\n\t    var data = getData(el);\n\t    var attrs = data.attrs;\n\t\n\t    if (attrs[name] === value) {\n\t      return;\n\t    }\n\t\n\t    if (name === 'style') {\n\t      attributes.applyStyle(el, value);\n\t    } else {\n\t      attributes.applyAttr(el, name, value);\n\t    }\n\t\n\t    attrs[name] = value;\n\t  }\n\t};\n\t\n\t\n\t/** */\n\tmodule.exports = attributes;\n\t\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _helpersStatefulComponent = __webpack_require__(19);\n\t\n\tvar _helpersStatefulComponent2 = _interopRequireDefault(_helpersStatefulComponent);\n\t\n\tvar _TodoItemJsx = __webpack_require__(20);\n\t\n\tvar _TodoItemJsx2 = _interopRequireDefault(_TodoItemJsx);\n\t\n\tvar _TodoFooterJsx = __webpack_require__(21);\n\t\n\tvar _TodoFooterJsx2 = _interopRequireDefault(_TodoFooterJsx);\n\t\n\tvar nextId = 0;\n\tfunction Todo(_ref) {\n\t  var id = _ref.id;\n\t  var title = _ref.title;\n\t  var completed = _ref.completed;\n\t\n\t  this.id = id || ++nextId;\n\t  this.title = title;\n\t  this.completed = completed == null ? false : completed;\n\t}\n\t\n\tvar INITIAL_TODOS = [];\n\t\n\t(function () {\n\t  for (var i = 0; i < 1000; ++i) {\n\t    INITIAL_TODOS.push(new Todo({ title: 'todo ' + i }));\n\t  }\n\t})();\n\t\n\tfunction handleNewTodoKeyDown(_ref2) {\n\t  var which = _ref2.which;\n\t  var target = _ref2.target;\n\t\n\t  if (which === 13) {\n\t    this.setState(this.state.concat([new Todo({ title: target.value })]));\n\t    target.value = '';\n\t  }\n\t}\n\t\n\tfunction handleToggleAll(_ref3) {\n\t  var target = _ref3.target;\n\t\n\t  var setCompleted = target.checked;\n\t  this.setState(this.state.map(function (todo) {\n\t    return new Todo(_extends({}, todo, { completed: setCompleted }));\n\t  }));\n\t}\n\t\n\tfunction handleToggle(todo) {\n\t  this.setState(this.state.map(function (t) {\n\t    return t === todo ? new Todo(_extends({}, t, { completed: !t.completed })) : t;\n\t  }));\n\t}\n\t\n\tfunction handleDestroy(removeTodo) {\n\t  this.setState(this.state.filter(function (todo) {\n\t    return todo !== removeTodo;\n\t  }));\n\t}\n\t\n\tfunction handleTitleChange(todo, newTitle) {\n\t  this.setState(this.state.map(function (t) {\n\t    return t === todo ? new Todo(_extends({}, t, { title: newTitle })) : t;\n\t  }));\n\t}\n\t\n\tfunction handleClearCompleted() {\n\t  this.setState(this.state.filter(function (todo) {\n\t    return !todo.completed;\n\t  }));\n\t}\n\t\n\tfunction getIncompleteCount(todos) {\n\t  var incompleteCount = 0;\n\t  for (var i = 0; i < todos.length; ++i) {\n\t    if (!todos[i].completed) ++incompleteCount;\n\t  }\n\t  return incompleteCount;\n\t}\n\t\n\texports['default'] = _helpersStatefulComponent2['default']({\n\t  reduce: function reduce(props, todos) {\n\t    return todos || INITIAL_TODOS;\n\t  },\n\t\n\t  render: function render(props, todos) {\n\t    var _this = this;\n\t\n\t    var incompleteCount = getIncompleteCount(todos);\n\t    return (IncrementalDOM.elementOpen('div', null, null, 'className', \"todoapp\"), IncrementalDOM.elementOpen('header', null, null, 'className', \"header\"), IncrementalDOM.elementOpen('h1'), IncrementalDOM.text('todos'), IncrementalDOM.elementClose('h1'), IncrementalDOM.elementVoid('input', null, null, 'className', \"new-todo\", 'placeholder', \"What needs to be done?\", 'onkeydown', handleNewTodoKeyDown.bind(this), 'autoFocus', true), IncrementalDOM.elementClose('header'), IncrementalDOM.elementOpen('section', null, null, 'className', \"main\"), IncrementalDOM.elementVoid('input', null, null, 'className', \"toggle-all\", 'type', \"checkbox\", 'onchange', handleToggleAll.bind(this), 'checked', !incompleteCount), IncrementalDOM.elementOpen('ul', null, null, 'className', \"todo-list\"), IncrementalDOM.text((todos.forEach(function (todo) {\n\t      return (_TodoItemJsx2['default']({\n\t        key: todo.id,\n\t        todo: todo,\n\t        onTitleChange: handleTitleChange.bind(_this, todo),\n\t        onToggle: handleToggle.bind(_this, todo),\n\t        onDestroy: handleDestroy.bind(_this, todo)\n\t      }));\n\t    }), '')), IncrementalDOM.elementClose('ul'), IncrementalDOM.elementClose('section'), _TodoFooterJsx2['default']({\n\t      incompleteCount: incompleteCount,\n\t      onClearCompleted: handleClearCompleted.bind(this)\n\t    }), IncrementalDOM.elementClose('div'));\n\t  }\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _incrementalDomSrcAlignmentJs = __webpack_require__(15);\n\t\n\tvar _incrementalDomSrcWalkerJs = __webpack_require__(10);\n\t\n\tvar _incrementalDomSrcNode_dataJs = __webpack_require__(11);\n\t\n\tvar _incrementalDomSrcTraversalJs = __webpack_require__(9);\n\t\n\t/*\n\t\n\tStatefull components that can decide whether they need to be re-rendered to improve performance.\n\t\n\tThis is a function creates a function that can be called in a render (`IncrementalDOM.patch()`).\n\t\n\tRequirements:\n\t\n\t- Handle initial render\n\t- Handle parent re-render\n\t- Handle component re-render (setState called)\n\t\n\t*/\n\t\n\tfunction Component(reduce, render, props, shouldUpdate) {\n\t  this.reduce = reduce;\n\t  this._render = render;\n\t  this.state = reduce(props);\n\t  this.props = props;\n\t  this.setState = this.setState.bind(this);\n\t  this.shouldUpdate = shouldUpdate;\n\t}\n\t\n\tComponent.prototype.render = function () {\n\t  return this._render(this.props, this.state, this.setState);\n\t};\n\t\n\t// Called by the component to set the new state and re-render the component without re-rendering the\n\t// whole document\n\tComponent.prototype.setState = function (newState) {\n\t  var _this = this;\n\t\n\t  var parentNode = this.node.parentNode;\n\t  this.state = newState;\n\t\n\t  IncrementalDOM.patch(parentNode, function () {\n\t    var walker = _incrementalDomSrcWalkerJs.getWalker();\n\t    // Skip over all siblings before component's element\n\t    while (walker.currentNode !== _this.node) {\n\t      _incrementalDomSrcTraversalJs.nextSibling();\n\t    }\n\t\n\t    _this.render();\n\t\n\t    // Mark the last child as visited so IncrementalDOM\n\t    // doesn't truncate all sibling elements after the\n\t    // component's element\n\t    _incrementalDomSrcNode_dataJs.getData(parentNode).lastVisitedChild = parentNode.lastChild;\n\t  });\n\t};\n\t\n\texports['default'] = function (_ref) {\n\t  var reduce = _ref.reduce;\n\t  var render = _ref.render;\n\t  var shouldUpdate = _ref.shouldUpdate;\n\t\n\t  // When rendering a component, we need to determine whether it's one of the following cases:\n\t  //   - Initial render\n\t  //   - Re-render\n\t  //\n\t  // We can determine this by asking IncrementalDOM whether we're about to render to an existing\n\t  // node (`IncrementalDOM.getMatchingNode(nodeName, key)`).\n\t  // The node name isn't known at the time of component declaration, but can be determined on\n\t  // the very first render.\n\t  var rootNodeName = undefined;\n\t\n\t  return function (props) {\n\t    var key = props && props.key;\n\t\n\t    // Asking IncrementalDOM whether we are going to be re-rendering an existing component\n\t    // or rendering a new component.\n\t    var node = rootNodeName && _incrementalDomSrcAlignmentJs.alignWithDOM(rootNodeName, key);\n\t    var component = node && node.__component;\n\t\n\t    // Render a new component\n\t    if (!component) {\n\t      component = new Component(reduce, render, props, shouldUpdate);\n\t\n\t      // To determine the component's root element, we ask IncrementalDOM to track the first\n\t      // element rendered.\n\t      node = component.render();\n\t\n\t      // if(__DEV__){\n\t      if (!node) {\n\t        console.log(\"Component render did not return a rendered node\", component.render.toString());\n\t      }\n\t      // }\n\t\n\t      rootNodeName = node.nodeName.toLowerCase();\n\t      component.node = node;\n\t      node.__component = component;\n\t    }\n\t    // Parent re-render\n\t    else {\n\t        var prevProps = component.props;\n\t        component.props = props;\n\t        if (!component.shouldUpdate || component.shouldUpdate(props, prevProps)) {\n\t          component.render();\n\t        } else {\n\t          _incrementalDomSrcTraversalJs.nextSibling();\n\t        }\n\t      }\n\t  };\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _helpersStatefulComponent = __webpack_require__(19);\n\t\n\tvar _helpersStatefulComponent2 = _interopRequireDefault(_helpersStatefulComponent);\n\t\n\tfunction handleBeginEditing() {\n\t  this.setState({ pendingTitle: this.props.todo.title, isEditing: true });\n\t}\n\t\n\tfunction handleEndEditing() {\n\t  this.setState({ isEditing: false });\n\t}\n\t\n\tfunction handleCommitEdit() {\n\t  if (this.state.isEditing) {\n\t    this.props.onTitleChange(this.state.pendingTitle);\n\t    handleEndEditing.call(this);\n\t  }\n\t}\n\t\n\tfunction handlePendingEditKeydown(e) {\n\t  var handled = false;\n\t  if (e.which === 13) {\n\t    handleCommitEdit.call(this);\n\t    handled = true;\n\t  } else if (e.which === 27) {\n\t    handleEndEditing.call(this);\n\t    handled = true;\n\t  }\n\t\n\t  if (handled) {\n\t    e.preventDefault();\n\t    e.stopImmediatePropagation();\n\t  }\n\t}\n\t\n\tfunction handlePendingEditInput(_ref) {\n\t  var which = _ref.which;\n\t  var target = _ref.target;\n\t\n\t  this.setState({ pendingTitle: target.value, isEditing: this.state.isEditing });\n\t}\n\t\n\texports['default'] = _helpersStatefulComponent2['default']({\n\t  reduce: function reduce(props, state) {\n\t    return { isEditing: false };\n\t  },\n\t\n\t  render: function render(_ref2, _ref3) {\n\t    var key = _ref2.key;\n\t    var todo = _ref2.todo;\n\t    var onTitleChange = _ref2.onTitleChange;\n\t    var onToggle = _ref2.onToggle;\n\t    var onDestroy = _ref2.onDestroy;\n\t    var pendingTitle = _ref3.pendingTitle;\n\t    var isEditing = _ref3.isEditing;\n\t\n\t    var className = '';\n\t    if (todo.completed) className += 'completed';\n\t    if (isEditing) className += ' editing';\n\t\n\t    return (IncrementalDOM.elementOpen('li', key, null, 'className', className), IncrementalDOM.elementOpen('div', null, null, 'className', \"view\"), IncrementalDOM.elementVoid('input', null, null, 'className', \"toggle\", 'type', \"checkbox\", 'checked', todo.completed, 'onchange', onToggle), IncrementalDOM.elementOpen('label', null, null, 'ondblclick', handleBeginEditing.bind(this)), IncrementalDOM.text(todo.title), IncrementalDOM.elementClose('label'), IncrementalDOM.elementVoid('button', null, null, 'className', \"destroy\", 'onclick', onDestroy), IncrementalDOM.elementClose('div'), IncrementalDOM.elementVoid('input', null, null, 'type', \"text\", 'className', \"edit\", 'onblur', handleCommitEdit.bind(this), 'onkeydown', handlePendingEditKeydown.bind(this), 'oninput', handlePendingEditInput.bind(this), 'value', pendingTitle), IncrementalDOM.elementClose('li'));\n\t  },\n\t\n\t  shouldUpdate: function shouldUpdate(props, prevProps) {\n\t    return props.todo !== prevProps.todo;\n\t  }\n\t\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tvar _helpersStatefulComponent = __webpack_require__(19);\n\t\n\tvar _helpersStatefulComponent2 = _interopRequireDefault(_helpersStatefulComponent);\n\t\n\texports[\"default\"] = _helpersStatefulComponent2[\"default\"]({\n\t  reduce: function reduce() {},\n\t  render: function render(_ref) {\n\t    var incompleteCount = _ref.incompleteCount;\n\t    var onClearCompleted = _ref.onClearCompleted;\n\t    return (IncrementalDOM.elementOpen(\"footer\", null, null, \"className\", \"footer\"), IncrementalDOM.elementOpen(\"span\", null, null, \"className\", \"todo-count\"), IncrementalDOM.text(incompleteCount), IncrementalDOM.text(\" left\"), IncrementalDOM.elementClose(\"span\"), IncrementalDOM.elementOpen(\"ul\", null, null, \"className\", \"filters\"), IncrementalDOM.elementOpen(\"li\"), IncrementalDOM.elementOpen(\"a\", null, null, \"href\", \"#/\", \"className\", \"selected\"), IncrementalDOM.text(\"All\"), IncrementalDOM.elementClose(\"a\"), IncrementalDOM.elementClose(\"li\"), IncrementalDOM.text(\" \"), IncrementalDOM.elementOpen(\"li\"), IncrementalDOM.elementOpen(\"a\", null, null, \"href\", \"#/active\", \"className\", \"selected\"), IncrementalDOM.text(\"Active\"), IncrementalDOM.elementClose(\"a\"), IncrementalDOM.elementClose(\"li\"), IncrementalDOM.text(\" \"), IncrementalDOM.elementOpen(\"li\"), IncrementalDOM.elementOpen(\"a\", null, null, \"href\", \"#/completed\", \"className\", \"selected\"), IncrementalDOM.text(\"Completed\"), IncrementalDOM.elementClose(\"a\"), IncrementalDOM.elementClose(\"li\"), IncrementalDOM.elementClose(\"ul\"), IncrementalDOM.elementOpen(\"button\", null, null, \"className\", \"clear-completed\", \"onclick\", onClearCompleted), IncrementalDOM.text(\"Clear completed\"), IncrementalDOM.elementClose(\"button\"), IncrementalDOM.elementClose(\"footer\"));\n\t  },\n\t\n\t  shouldUpdate: function shouldUpdate(props, prevProps) {\n\t    return props.incompleteCount !== prevProps.incompleteCount;\n\t  }\n\t});\n\tmodule.exports = exports[\"default\"];\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** main.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7f15b07e094d10b15f7f\n **/","import 'todomvc-app-css/index.css';\n\nimport IncrementalDOM from 'incremental-dom';\nimport App            from './components/App.jsx';\n\nwindow.IncrementalDOM = IncrementalDOM;\nIncrementalDOM.attributes.applyAttr = function(el, name, value) {\n  el[name] = value;\n};\nIncrementalDOM.patch(window.APP, App);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","/**\n * @license\n * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar patch = require('./src/patch').patch;\nvar elements = require('./src/virtual_elements');\nvar attributes = require('./src/attributes');\n\nmodule.exports = {\n  patch: patch,\n  elementVoid: elements.elementVoid,\n  elementOpenStart: elements.elementOpenStart,\n  elementOpenEnd: elements.elementOpenEnd,\n  elementOpen: elements.elementOpen,\n  elementClose: elements.elementClose,\n  text: elements.text,\n  attr: elements.attr,\n  attributes: attributes\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/incremental-dom/index.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\n * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar traversal = require('./traversal'),\n    firstChild = traversal.firstChild,\n    parentNode = traversal.parentNode;\nvar TreeWalker = require('./tree_walker');\nvar walker = require('./walker'),\n    getWalker = walker.getWalker,\n    setWalker = walker.setWalker;\n\n/**\n * @const {boolean}\n */\nvar IS_PRODUCTION = process.env.NODE_ENV === 'production';\n\nif (!IS_PRODUCTION) {\n  var assertNoUnclosedTags = function(root) {\n    var openElement = getWalker().getCurrentParent();\n    if (!openElement) {\n      return;\n    }\n\n    var openTags = [];\n    while (openElement && openElement !== root) {\n      openTags.push(openElement.nodeName.toLowerCase());\n      openElement = openElement.parentNode;\n    }\n\n    throw new Error('One or more tags were not closed:\\n' +\n        openTags.join('\\n'));\n  };\n}\n\n\n/**\n * Patches the document starting at el with the provided function. This function\n * may be called during an existing patch operation.\n * @param {!Element|!Document} node The Element or Document to patch.\n * @param {!function} fn A function containing elementOpen/elementClose/etc.\n *     calls that describe the DOM.\n * @param {*} data An argument passed to fn to represent DOM state.\n */\nvar patch = function(node, fn, data) {\n  var prevWalker = getWalker();\n  setWalker(new TreeWalker(node));\n\n  firstChild();\n  fn(data);\n  parentNode();\n\n  if (!IS_PRODUCTION) {\n    assertNoUnclosedTags(node);\n  }\n\n  setWalker(prevWalker);\n};\n\n\n/** */\nmodule.exports = {\n  patch: patch\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/incremental-dom/src/patch.js\n ** module id = 7\n ** module chunks = 0\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/node-libs-browser/~/process/browser.js\n ** module id = 8\n ** module chunks = 0\n **/","/**\n * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar getWalker = require('./walker').getWalker;\nvar getData = require('./node_data').getData;\nvar namespace = require('./namespace');\n\n\n/**\n * Enters a Element, setting the current namespace for nested elements.\n * @param {!Element} node\n */\nvar enterNode = function(node) {\n  var data = getData(node);\n  namespace.enterTag(data.nodeName);\n};\n\n\n/**\n * Clears out any unvisited Nodes, as the corresponding virtual element\n * functions were never called for them, and unwinds the current namespace\n * to the previous value.\n * @param {!Element} node\n */\nvar exitNode = function(node) {\n  var data = getData(node);\n  var lastVisitedChild = data.lastVisitedChild;\n  data.lastVisitedChild = null;\n\n  namespace.exitTag(data.nodeName);\n\n  if (node.lastChild === lastVisitedChild) {\n    return;\n  }\n\n  while (node.lastChild !== lastVisitedChild) {\n    node.removeChild(node.lastChild);\n  }\n\n  // Invalidate the key map since we removed children. It will get recreated\n  // next time we need it.\n  data.keyMap = null;\n};\n\n\n/**\n * Marks node's parent as having visited node.\n * @param {!Node} node\n */\nvar markVisited = function(node) {\n  var walker = getWalker();\n  var parent = walker.getCurrentParent();\n  var data = getData(parent);\n  data.lastVisitedChild = node;\n};\n\n\n/**\n * Changes to the first child of the current node.\n */\nvar firstChild = function() {\n  var walker = getWalker();\n  enterNode(walker.currentNode);\n  walker.firstChild();\n};\n\n\n/**\n * Changes to the next sibling of the current node.\n */\nvar nextSibling = function() {\n  var walker = getWalker();\n  markVisited(walker.currentNode);\n  walker.nextSibling();\n};\n\n\n/**\n * Changes to the parent of the current node, removing any unvisited children.\n */\nvar parentNode = function() {\n  var walker = getWalker();\n  walker.parentNode();\n  exitNode(walker.currentNode);\n};\n\n\n/** */\nmodule.exports = {\n  firstChild: firstChild,\n  nextSibling: nextSibling,\n  parentNode: parentNode\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/incremental-dom/src/traversal.js\n ** module id = 9\n ** module chunks = 0\n **/","/**\n * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @type {TreeWalker}\n */\nvar walker_;\n\n\n/**\n * @return {TreeWalker} the current TreeWalker\n */\nvar getWalker = function() {\n  return walker_;\n};\n\n\n/**\n * Sets the current TreeWalker\n * @param {TreeWalker} walker\n */\nvar setWalker = function(walker) {\n  walker_ = walker;\n};\n\n\n/** */\nmodule.exports = {\n  getWalker: getWalker,\n  setWalker: setWalker\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/incremental-dom/src/walker.js\n ** module id = 10\n ** module chunks = 0\n **/","/**\n * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * Keeps track of information needed to perform diffs for a given DOM node.\n * @param {?string} nodeName\n * @param {?string} key\n * @constructor\n */\nfunction NodeData(nodeName, key) {\n  /**\n   * The attributes and their values.\n   * @const\n   */\n  this.attrs = {};\n\n  /**\n   * An array of attribute name/value pairs, used for quickly diffing the\n   * incomming attributes to see if the DOM node's attributes need to be\n   * updated.\n   * @const {Array<*>}\n   */\n  this.attrsArr = [];\n\n  /**\n   * The incoming attributes for this Node, before they are updated.\n   * @const {!Object<string, *>}\n   */\n  this.newAttrs = {};\n\n  /**\n   * The key used to identify this node, used to preserve DOM nodes when they\n   * move within their parent.\n   * @const\n   */\n  this.key = key || null;\n\n  /**\n   * Keeps track of children within this node by their key.\n   * {?Object<string, Node>}\n   */\n  this.keyMap = null;\n\n  /**\n   * The last child to have been visited within the current pass.\n   * {?Node}\n   */\n  this.lastVisitedChild = null;\n\n  /**\n   * The node name for this node.\n   * @const\n   */\n  this.nodeName = nodeName;\n\n  /**\n   * @const {string}\n   */\n  this.text = null;\n}\n\n\n/**\n * Initializes a NodeData object for a Node.\n *\n * @param {!Node} node The node to initialize data for.\n * @param {string} nodeName The node name of node.\n * @param {?string} key The key that identifies the node.\n * @return {!NodeData} The newly initialized data object\n */\nvar initData = function(node, nodeName, key) {\n  var data = new NodeData(nodeName, key);\n  node['__incrementalDOMData'] = data;\n  return data;\n};\n\n\n/**\n * Retrieves the NodeData object for a Node, creating it if necessary.\n *\n * @param {!Node} node The node to retrieve the data for.\n * @return {NodeData} The NodeData for this Node.\n */\nvar getData = function(node) {\n  var data = node['__incrementalDOMData'];\n\n  if (!data) {\n    var nodeName = node.nodeName.toLowerCase();\n    var key = null;\n\n    if (node instanceof Element) {\n      key = node.getAttribute('key');\n    }\n\n    data = initData(node, nodeName, key);\n  }\n\n  return data;\n};\n\n\n/**\n * @param {?Node} node A node to get the key for.\n * @return {?string} The key for the Node, if applicable.\n */\nvar getKey = function(node) {\n  return getData(node).key;\n};\n\n\n/**\n * @param {?Node} node A node to get the node name for.\n * @return {?string} The node name for the Node, if applicable.\n */\nvar getNodeName = function(node) {\n  return getData(node).nodeName;\n};\n\n\n/** */\nmodule.exports = {\n  getData: getData,\n  initData: initData,\n  getKey: getKey,\n  getNodeName: getNodeName\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/incremental-dom/src/node_data.js\n ** module id = 11\n ** module chunks = 0\n **/","/**\n * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar getWalker = require('./walker').getWalker;\n\nvar SVG_NS = 'http://www.w3.org/2000/svg';\n\n/**\n * Enters a tag, checking to see if it is a namespace boundary, and if so,\n * updates the current namespace.\n * @param {string} tag The tag to enter.\n */\nvar enterTag = function(tag) {\n  if (tag === 'svg') {\n    getWalker().enterNamespace(SVG_NS);\n  } else if (tag === 'foreignObject') {\n    getWalker().enterNamespace(undefined);\n  }\n};\n\n\n/**\n * Exits a tag, checking to see if it is a namespace boundary, and if so,\n * updates the current namespace.\n * @param {string} tag The tag to enter.\n */\nvar exitTag = function(tag) {\n  if (tag === 'svg' || tag === 'foreignObject') {\n    getWalker().exitNamespace();\n  }\n};\n\n\n/**\n * Gets the namespace to create an element (of a given tag) in.\n * @param {string} tag The tag to get the namespace for.\n * @return {string} The namespace to create the tag in.\n */\nvar getNamespaceForTag = function(tag) {\n  if (tag === 'svg') {\n    return SVG_NS;\n  }\n\n  return getWalker().getCurrentNamespace();\n};\n\n\n/** */\nmodule.exports = {\n  enterTag: enterTag,\n  exitTag: exitTag,\n  getNamespaceForTag: getNamespaceForTag\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/incremental-dom/src/namespace.js\n ** module id = 12\n ** module chunks = 0\n **/","/**\n * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Similar to the built-in Treewalker class, but simplified and allows direct\n * access to modify the currentNode property.\n * @param {!Node} node The root Node of the subtree the walker should start\n *     traversing.\n * @constructor\n */\nfunction TreeWalker(node) {\n  /**\n   * Keeps track of the current parent node. This is necessary as the traversal\n   * methods may traverse past the last child and we still need a way to get\n   * back to the parent.\n   * @const @private {!Array<!Node>}\n   */\n  this.stack_ = [];\n\n  /** {?Node} */\n  this.currentNode = node;\n\n  /** {!Document} */\n  this.doc = node.ownerDocument;\n\n  /**\n   * Keeps track of what namespace to create new Elements in.\n   * @const @private {!Array<string>}\n   */\n  this.nsStack_ = [undefined];\n}\n\n\n/**\n * @return {!Node} The current parent of the current location in the subtree.\n */\nTreeWalker.prototype.getCurrentParent = function() {\n  return this.stack_[this.stack_.length - 1];\n};\n\n\n/**\n * @return {string} The current namespace to create Elements in.\n */\nTreeWalker.prototype.getCurrentNamespace = function() {\n  return this.nsStack_[this.nsStack_.length - 1];\n};\n\n\n/**\n * @param {string} namespace The namespace to enter.\n */\nTreeWalker.prototype.enterNamespace = function(namespace) {\n  this.nsStack_.push(namespace);\n};\n\n\n/**\n * Exits the current namespace\n */\nTreeWalker.prototype.exitNamespace = function() {\n  this.nsStack_.pop();\n};\n\n\n/**\n * Changes the current location the firstChild of the current location.\n */\nTreeWalker.prototype.firstChild = function() {\n  this.stack_.push(this.currentNode);\n  this.currentNode = this.currentNode.firstChild;\n};\n\n\n/**\n * Changes the current location the nextSibling of the current location.\n */\nTreeWalker.prototype.nextSibling = function() {\n  this.currentNode = this.currentNode.nextSibling;\n};\n\n\n/**\n * Changes the current location the parentNode of the current location.\n */\nTreeWalker.prototype.parentNode = function() {\n  this.currentNode = this.stack_.pop();\n};\n\n\n/** */\nmodule.exports = TreeWalker;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/incremental-dom/src/tree_walker.js\n ** module id = 13\n ** module chunks = 0\n **/","/**\n * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar alignWithDOM = require('./alignment').alignWithDOM;\nvar updateAttribute = require('./attributes').updateAttribute;\nvar getData = require('./node_data').getData;\nvar getWalker = require('./walker').getWalker;\nvar traversal = require('./traversal'),\n    firstChild = traversal.firstChild,\n    nextSibling = traversal.nextSibling,\n    parentNode = traversal.parentNode;\n\n\n/**\n * The offset in the virtual element declaration where the attributes are\n * specified.\n * @const\n */\nvar ATTRIBUTES_OFFSET = 3;\n\n\n/**\n * Builds an array of arguments for use with elementOpenStart, attr and\n * elementOpenEnd.\n * @const {Array<*>}\n */\nvar argsBuilder = [];\n\n/**\n * @const {boolean}\n */\nvar IS_PRODUCTION = process.env.NODE_ENV === 'production';\n\nif (!IS_PRODUCTION) {\n  /**\n   * Keeps track whether or not we are in an attributes declaration (after\n   * elementOpenStart, but before elementOpenEnd).\n   * @type {boolean}\n   */\n  var inAttributes = false;\n\n\n  /** Makes sure that the caller is not where attributes are expected. */\n  var assertNotInAttributes = function() {\n    if (inAttributes) {\n      throw new Error('Was not expecting a call to attr or elementOpenEnd, ' +\n          'they must follow a call to elementOpenStart.');\n    }\n  };\n\n\n  /** Makes sure that the caller is where attributes are expected. */\n  var assertInAttributes = function() {\n    if (!inAttributes) {\n      throw new Error('Was expecting a call to attr or elementOpenEnd. ' +\n          'elementOpenStart must be followed by zero or more calls to attr, ' +\n          'then one call to elementOpenEnd.');\n    }\n  };\n\n\n  /**\n   * Makes sure that tags are correctly nested.\n   * @param {string} tag\n   */\n  var assertCloseMatchesOpenTag = function(tag) {\n    var closingNode = getWalker().getCurrentParent();\n    var data = getData(closingNode);\n\n    if (tag !== data.nodeName) {\n      throw new Error('Received a call to close ' + tag + ' but ' +\n            data.nodeName + ' was open.');\n    }\n  };\n\n\n  /** Updates the state to being in an attribute declaration. */\n  var setInAttributes = function() {\n    inAttributes = true;\n  };\n\n\n  /** Updates the state to not being in an attribute declaration. */\n  var setNotInAttributes = function() {\n    inAttributes = false;\n  };\n}\n\n\n/**\n * Checks to see if one or more attributes have changed for a given\n * Element. When no attributes have changed, this function is much faster than\n * checking each individual argument. When attributes have changed, the overhead\n * of this function is minimal.\n *\n * This function is called in the context of the Element and the arguments from\n * elementOpen-like function so that the arguments are not de-optimized.\n *\n * @this {Element} The Element to check for changed attributes.\n * @param {*} unused1\n * @param {*} unused2\n * @param {*} unused3\n * @param {...*} var_args Attribute name/value pairs of the dynamic attributes\n *     for the Element.\n * @return {boolean} True if the Element has one or more changed attributes,\n *     false otherwise.\n */\nvar hasChangedAttrs = function(unused1, unused2, unused3, var_args) {\n  var data = getData(this);\n  var attrsArr = data.attrsArr;\n  var attrsChanged = false;\n  var i = ATTRIBUTES_OFFSET;\n  var j = 0;\n\n  for (; i < arguments.length; i += 1, j += 1) {\n    if (attrsArr[j] !== arguments[i]) {\n      attrsChanged = true;\n      break;\n    }\n  }\n\n  for (; i < arguments.length; i += 1, j += 1) {\n    attrsArr[j] = arguments[i];\n  }\n\n  if (j < attrsArr.length) {\n    attrsChanged = true;\n    attrsArr.length = j;\n  }\n\n  return attrsChanged;\n};\n\n\n/**\n * Updates the newAttrs object for an Element.\n *\n * This function is called in the context of the Element and the arguments from\n * elementOpen-like function so that the arguments are not de-optimized.\n *\n * @this {Element} The Element to update newAttrs for.\n * @param {*} unused1\n * @param {*} unused2\n * @param {*} unused3\n * @param {...*} var_args Attribute name/value pairs of the dynamic attributes\n *     for the Element.\n * @return {!Object<string, *>} The updated newAttrs object.\n */\nvar updateNewAttrs = function(unused1, unused2, unused3, var_args) {\n  var node = this;\n  var data = getData(node);\n  var newAttrs = data.newAttrs;\n\n  for (var attr in newAttrs) {\n    newAttrs[attr] = undefined;\n  }\n\n  for (var i = ATTRIBUTES_OFFSET; i < arguments.length; i += 2) {\n    newAttrs[arguments[i]] = arguments[i + 1];\n  }\n\n  return newAttrs;\n};\n\n\n/**\n * Updates the attributes for a given Element.\n * @param {!Element} node\n * @param {!Object<string,*>} newAttrs The new attributes for node.\n */\nvar updateAttributes = function(node, newAttrs) {\n  for (var attr in newAttrs) {\n    updateAttribute(node, attr, newAttrs[attr]);\n  }\n};\n\n\n/**\n * Declares a virtual Element at the current location in the document. This\n * corresponds to an opening tag and a elementClose tag is required.\n * @param {string} tag The element's tag.\n * @param {?string} key The key used to identify this element. This can be an\n *     empty string, but performance may be better if a unique value is used\n *     when iterating over an array of items.\n * @param {?Array<*>} statics An array of attribute name/value pairs of the\n *     static attributes for the Element. These will only be set once when the\n *     Element is created.\n * @param {...*} var_args Attribute name/value pairs of the dynamic attributes\n *     for the Element.\n * @return {!Element} The corresponding Element.\n */\nvar elementOpen = function(tag, key, statics, var_args) {\n  if (!IS_PRODUCTION) {\n    assertNotInAttributes();\n  }\n\n  var node = alignWithDOM(tag, key, statics);\n\n  if (hasChangedAttrs.apply(node, arguments)) {\n    var newAttrs = updateNewAttrs.apply(node, arguments);\n    updateAttributes(node, newAttrs);\n  }\n\n  firstChild();\n  return node;\n};\n\n\n/**\n * Declares a virtual Element at the current location in the document. This\n * corresponds to an opening tag and a elementClose tag is required. This is\n * like elementOpen, but the attributes are defined using the attr function\n * rather than being passed as arguments. Must be folllowed by 0 or more calls\n * to attr, then a call to elementOpenEnd.\n * @param {string} tag The element's tag.\n * @param {?string} key The key used to identify this element. This can be an\n *     empty string, but performance may be better if a unique value is used\n *     when iterating over an array of items.\n * @param {?Array<*>} statics An array of attribute name/value pairs of the\n *     static attributes for the Element. These will only be set once when the\n *     Element is created.\n */\nvar elementOpenStart = function(tag, key, statics) {\n  if (!IS_PRODUCTION) {\n    assertNotInAttributes();\n    setInAttributes();\n  }\n\n  argsBuilder[0] = tag;\n  argsBuilder[1] = key;\n  argsBuilder[2] = statics;\n};\n\n\n/***\n * Defines a virtual attribute at this point of the DOM. This is only valid\n * when called between elementOpenStart and elementOpenEnd.\n *\n * @param {string} name\n * @param {*} value\n */\nvar attr = function(name, value) {\n  if (!IS_PRODUCTION) {\n    assertInAttributes();\n  }\n\n  argsBuilder.push(name, value);\n};\n\n\n/**\n * Closes an open tag started with elementOpenStart.\n * @return {!Element} The corresponding Element.\n */\nvar elementOpenEnd = function() {\n  if (!IS_PRODUCTION) {\n    assertInAttributes();\n    setNotInAttributes();\n  }\n\n  var node = elementOpen.apply(null, argsBuilder);\n  argsBuilder.length = 0;\n  return node;\n};\n\n\n/**\n * Closes an open virtual Element.\n *\n * @param {string} tag The element's tag.\n * @return {!Element} The corresponding Element.\n */\nvar elementClose = function(tag) {\n  if (!IS_PRODUCTION) {\n    assertNotInAttributes();\n    assertCloseMatchesOpenTag(tag);\n  }\n\n  parentNode();\n  var node = getWalker().currentNode;\n  nextSibling();\n  return node;\n};\n\n\n/**\n * Declares a virtual Element at the current location in the document that has\n * no children.\n * @param {string} tag The element's tag.\n * @param {?string} key The key used to identify this element. This can be an\n *     empty string, but performance may be better if a unique value is used\n *     when iterating over an array of items.\n * @param {?Array<*>} statics An array of attribute name/value pairs of the\n *     static attributes for the Element. These will only be set once when the\n *     Element is created.\n * @param {...*} var_args Attribute name/value pairs of the dynamic attributes\n *     for the Element.\n * @return {!Element} The corresponding Element.\n */\nvar elementVoid = function(tag, key, statics, var_args) {\n  if (!IS_PRODUCTION) {\n    assertNotInAttributes();\n  }\n\n  var node = elementOpen.apply(null, arguments);\n  elementClose.apply(null, arguments);\n  return node;\n};\n\n\n/**\n * Declares a virtual Text at this point in the document.\n *\n * @param {string} value The text of the Text.\n */\nvar text = function(value) {\n  if (!IS_PRODUCTION) {\n    assertNotInAttributes();\n  }\n\n  var node = alignWithDOM('#text', null, value);\n  var data = getData(node);\n\n  if (data.text !== value) {\n    node.data = value;\n    data.text = value;\n  }\n\n  nextSibling();\n};\n\n\n/** */\nmodule.exports = {\n  elementOpenStart: elementOpenStart,\n  elementOpenEnd: elementOpenEnd,\n  elementOpen: elementOpen,\n  elementVoid: elementVoid,\n  elementClose: elementClose,\n  text: text,\n  attr: attr\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/incremental-dom/src/virtual_elements.js\n ** module id = 14\n ** module chunks = 0\n **/","/**\n * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar nodes = require('./nodes'),\n    createNode = nodes.createNode,\n    getChild = nodes.getChild,\n    registerChild = nodes.registerChild;\nvar nodeData = require('./node_data'),\n    getKey = nodeData.getKey,\n    getNodeName = nodeData.getNodeName;\nvar getWalker = require('./walker').getWalker;\n\n\n/**\n * Checks whether or not a given node matches the specified nodeName and key.\n *\n * @param {!Node} node An HTML node, typically an HTMLElement or Text.\n * @param {?string} nodeName The nodeName for this node.\n * @param {?string} key An optional key that identifies a node.\n * @return {boolean} True if the node matches, false otherwise.\n */\nvar matches = function(node, nodeName, key) {\n  if (key) {\n    return key === getKey(node);\n  }\n  return nodeName === getNodeName(node);\n};\n\n\n/**\n * Aligns the virtual Element definition with the actual DOM, moving the\n * corresponding DOM node to the correct location or creating it if necessary.\n * @param {?string} nodeName For an Element, this should be a valid tag string.\n *     For a Text, this should be #text.\n * @param {?string} key The key used to identify this element.\n * @param {?Array<*>|string} statics For an Element, this should be an array of\n *     name-value pairs. For a Text, this should be the text content of the\n *     node.\n * @return {!Node} The matching node.\n */\nvar alignWithDOM = function(nodeName, key, statics) {\n  var walker = getWalker();\n  var currentNode = walker.currentNode;\n  var parent = walker.getCurrentParent();\n  var matchingNode, moveNode;\n\n  // Check to see if we have a node to reuse\n  if (currentNode && matches(currentNode, nodeName, key)) {\n    matchingNode = currentNode;\n  } else {\n    var existingNode = key && getChild(parent, key);\n\n    // Check to see if the node has moved within the parent or if a new one\n    // should be created\n    if (existingNode) {\n      matchingNode = existingNode;\n\n      // Move all nodes before the matchingNode to the end\n      while(matchingNode !== walker.currentNode) {\n        moveNode = walker.currentNode;\n        walker.nextSibling();\n        parent.appendChild(moveNode);\n      }\n    } else {\n      matchingNode = createNode(walker.doc, nodeName, key, statics);\n      if (key) {\n        registerChild(parent, key, matchingNode);\n      }\n      parent.insertBefore(matchingNode, currentNode);\n      walker.currentNode = matchingNode;\n    }\n  }\n\n  return matchingNode;\n};\n\n\n/** */\nmodule.exports = {\n  alignWithDOM: alignWithDOM\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/incremental-dom/src/alignment.js\n ** module id = 15\n ** module chunks = 0\n **/","/**\n * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar updateAttribute = require('./attributes').updateAttribute;\nvar nodeData = require('./node_data'),\n    getData = nodeData.getData,\n    getKey = nodeData.getKey,\n    initData = nodeData.initData;\nvar getNamespaceForTag = require('./namespace').getNamespaceForTag;\n\n\n/**\n * Creates an Element.\n * @param {!Document} doc The document with which to create the Element.\n * @param {string} tag The tag for the Element.\n * @param {?string} key A key to identify the Element.\n * @param {?Array<*>} statics An array of attribute name/value pairs of\n *     the static attributes for the Element.\n * @return {!Element}\n */\nvar createElement = function(doc, tag, key, statics) {\n  var namespace = getNamespaceForTag(tag);\n  var el;\n\n  if (namespace) {\n    el = doc.createElementNS(namespace, tag);\n  } else {\n    el = doc.createElement(tag);\n  }\n\n  initData(el, tag, key);\n\n  if (statics) {\n    for (var i = 0; i < statics.length; i += 2) {\n      updateAttribute(el, statics[i], statics[i + 1]);\n    }\n  }\n\n  return el;\n};\n\n/**\n * Creates a Text.\n * @param {!Document} doc The document with which to create the Text.\n * @param {string} text The initial content of the Text.\n * @return {!Text}\n */\nvar createTextNode = function(doc, text) {\n  var node = doc.createTextNode(text);\n  getData(node).text = text;\n\n  return node;\n};\n\n\n/**\n * Creates a Node, either a Text or an Element depending on the node name\n * provided.\n * @param {!Document} doc The document with which to create the Node.\n * @param {string} nodeName The tag if creating an element or #text to create\n *     a Text.\n * @param {?string} key A key to identify the Element.\n * @param {?Array<*>|string} statics The static data to initialize the Node\n *     with. For an Element, an array of attribute name/value pairs of\n *     the static attributes for the Element. For a Text, a string with the\n *     initial content of the Text.\n * @return {!Node}\n */\nvar createNode = function(doc, nodeName, key, statics) {\n  if (nodeName === '#text') {\n    return createTextNode(doc, statics);\n  }\n\n  return createElement(doc, nodeName, key, statics);\n};\n\n\n/**\n * Creates a mapping that can be used to look up children using a key.\n * @param {!Element} el\n * @return {!Object<string, !Node>} A mapping of keys to the children of the\n *     Element.\n */\nvar createKeyMap = function(el) {\n  var map = {};\n  var children = el.children;\n  var count = children.length;\n\n  for (var i = 0; i < count; i += 1) {\n    var child = children[i];\n    var key = getKey(child);\n\n    if (key) {\n      map[key] = child;\n    }\n  }\n\n  return map;\n};\n\n\n/**\n * Retrieves the mapping of key to child node for a given Element, creating it\n * if necessary.\n * @param {!Element} el\n * @return {!Object<string,!Node>} A mapping of keys to child Nodes\n */\nvar getKeyMap = function(el) {\n  var data = getData(el);\n\n  if (!data.keyMap) {\n    data.keyMap = createKeyMap(el);\n  }\n\n  return data.keyMap;\n};\n\n\n/**\n * Retrieves a child from the parent with the given key.\n * @param {!Element} parent\n * @param {?string} key\n * @return {?Node} The child corresponding to the key.\n */\nvar getChild = function(parent, key) {\n  return getKeyMap(parent)[key];\n};\n\n\n/**\n * Registers a node as being a child. The parent will keep track of the child\n * using the key. The child can be retrieved using the same key using\n * getKeyMap. The provided key should be unique within the parent Element.\n * @param {!Element} parent The parent of child.\n * @param {string} key A key to identify the child with.\n * @param {!Node} child The child to register.\n */\nvar registerChild = function(parent, key, child) {\n  getKeyMap(parent)[key] = child;\n};\n\n\n/** */\nmodule.exports = {\n  createNode: createNode,\n  getChild: getChild,\n  registerChild: registerChild\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/incremental-dom/src/nodes.js\n ** module id = 16\n ** module chunks = 0\n **/","/**\n * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar getData = require('./node_data').getData;\n\n\nvar attributes = {\n  /**\n   * Applies an attribute or property to a given Element. If the value is a\n   * object or a function (which includes null), it is set as a property on the\n   * Element. Otherwise, the value is set as an attribute.\n   * @param {!Element} el\n   * @param {string} name The attribute's name.\n   * @param {*} value The attribute's value. If the value is a string, it is set\n   *     as an HTML attribute, otherwise, it is set on node.\n   */\n  applyAttr: function(el, name, value) {\n    var type = typeof value;\n\n    if (type === 'object' || type === 'function') {\n      el[name] = value;\n    } else if (value === undefined) {\n      el.removeAttribute(name);\n    } else {\n      el.setAttribute(name, value);\n    }\n  },\n\n\n  /**\n   * Applies a style to an Element. No vendor prefix expansion is done for\n   * property names/values.\n   * @param {!Element} el\n   * @param {string|Object<string,string>} style The style to set. Either a\n   *     string of css or an object containing property-value pairs.\n   */\n  applyStyle: function(el, style) {\n    if (typeof style === 'string') {\n      el.style.cssText = style;\n    } else {\n      el.style.cssText = '';\n\n      for (var prop in style) {\n        el.style[prop] = style[prop];\n      }\n    }\n  },\n\n\n  /**\n   * Updates a single attribute on an Element.\n   * @param {!Element} el\n   * @param {string} name The attribute's name.\n   * @param {*} value The attribute's value. If the value is a string, it is set\n   *     as an HTML attribute, otherwise, it is set on node.\n   */\n  updateAttribute: function(el, name, value) {\n    var data = getData(el);\n    var attrs = data.attrs;\n\n    if (attrs[name] === value) {\n      return;\n    }\n\n    if (name === 'style') {\n      attributes.applyStyle(el, value);\n    } else {\n      attributes.applyAttr(el, name, value);\n    }\n\n    attrs[name] = value;\n  }\n};\n\n\n/** */\nmodule.exports = attributes;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/incremental-dom/src/attributes.js\n ** module id = 17\n ** module chunks = 0\n **/","import StatefulComponent from '../helpers/StatefulComponent';\nimport TodoItem          from './TodoItem.jsx';\nimport TodoFooter        from './TodoFooter.jsx';\n\nlet nextId = 0;\nfunction Todo({id, title, completed}){\n  this.id        = id || ++nextId;\n  this.title     = title;\n  this.completed = completed == null ? false : completed;\n}\n\nconst INITIAL_TODOS = [];\n\n(()=>{\n  for(let i=0; i<1000; ++i){\n    INITIAL_TODOS.push(new Todo({title: `todo ${i}`}));\n  }\n})();\n\nfunction handleNewTodoKeyDown({which, target}){\n  if(which === 13){\n    this.setState(this.state.concat([new Todo({title: target.value})]));\n    target.value = '';\n  }\n}\n\nfunction handleToggleAll({target}){\n  const setCompleted = target.checked;\n  this.setState(\n    this.state.map(todo=>new Todo({...todo, completed: setCompleted}))\n  );\n}\n\nfunction handleToggle(todo){\n  this.setState(\n    this.state.map(t=>\n      t === todo ? new Todo({...t, completed: !t.completed}) : t\n    )\n  );\n}\n\nfunction handleDestroy(removeTodo){\n  this.setState(this.state.filter(todo=>todo !== removeTodo));\n}\n\nfunction handleTitleChange(todo, newTitle){\n  this.setState(\n    this.state.map(t=>\n      t === todo ? new Todo({...t, title: newTitle}) : t\n    )\n  );\n}\n\nfunction handleClearCompleted(){\n  this.setState(this.state.filter(todo=>!todo.completed));\n}\n\nfunction getIncompleteCount(todos){\n  let incompleteCount = 0;\n  for(let i=0; i<todos.length; ++i){\n    if(!todos[i].completed) ++incompleteCount;\n  }\n  return incompleteCount;\n}\n\nexport default StatefulComponent({\n  reduce:(props, todos)=>todos || INITIAL_TODOS,\n\n\n  render(props, todos){\n    let incompleteCount = getIncompleteCount(todos);\n    return (\n      <div className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onkeydown={handleNewTodoKeyDown.bind(this)}\n            autoFocus={true} />\n        </header>\n        <section className=\"main\">\n          <input\n            className=\"toggle-all\"\n            type=\"checkbox\"\n            onchange={handleToggleAll.bind(this)}\n            checked={!incompleteCount} />\n          <ul className=\"todo-list\">\n            {todos.forEach(todo=>\n              <TodoItem\n                key={todo.id}\n                todo={todo}\n                onTitleChange={handleTitleChange.bind(this, todo)}\n                onToggle={handleToggle.bind(this, todo)}\n                onDestroy={handleDestroy.bind(this, todo)} />\n            ),''}\n          </ul>\n        </section>\n        <TodoFooter\n          incompleteCount={incompleteCount}\n          onClearCompleted={handleClearCompleted.bind(this)} />\n      </div>\n    );\n  }\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/App.jsx\n **/","import {alignWithDOM} from 'incremental-dom/src/alignment.js';\nimport {getWalker} from 'incremental-dom/src/walker.js';\nimport {getData} from 'incremental-dom/src/node_data.js';\nimport {nextSibling} from 'incremental-dom/src/traversal.js';\n\n/*\n\nStatefull components that can decide whether they need to be re-rendered to improve performance.\n\nThis is a function creates a function that can be called in a render (`IncrementalDOM.patch()`).\n\nRequirements:\n\n- Handle initial render\n- Handle parent re-render\n- Handle component re-render (setState called)\n\n*/\n\nfunction Component(reduce, render, props, shouldUpdate){\n  this.reduce       = reduce;\n  this._render      = render;\n  this.state        = reduce(props);\n  this.props        = props;\n  this.setState     = this.setState.bind(this);\n  this.shouldUpdate = shouldUpdate;\n}\n\nComponent.prototype.render = function(){\n  return this._render(this.props, this.state, this.setState);\n};\n\n// Called by the component to set the new state and re-render the component without re-rendering the\n// whole document\nComponent.prototype.setState = function(newState){\n  const parentNode = this.node.parentNode;\n  this.state = newState;\n\n  IncrementalDOM.patch(parentNode, ()=>{\n    const walker = getWalker();\n    // Skip over all siblings before component's element\n    while(walker.currentNode !== this.node){\n      nextSibling();\n    }\n\n    this.render();\n\n    // Mark the last child as visited so IncrementalDOM\n    // doesn't truncate all sibling elements after the\n    // component's element\n    getData(parentNode).lastVisitedChild = parentNode.lastChild;\n  });\n};\n\nexport default ({reduce, render, shouldUpdate})=>{\n  // When rendering a component, we need to determine whether it's one of the following cases:\n  //   - Initial render\n  //   - Re-render\n  //\n  // We can determine this by asking IncrementalDOM whether we're about to render to an existing\n  // node (`IncrementalDOM.getMatchingNode(nodeName, key)`).\n  // The node name isn't known at the time of component declaration, but can be determined on\n  // the very first render.\n  let rootNodeName;\n\n  return props=>{\n    const key = props && props.key;\n\n    // Asking IncrementalDOM whether we are going to be re-rendering an existing component\n    // or rendering a new component.\n    let node      = rootNodeName && alignWithDOM(rootNodeName, key);\n    let component = node && node.__component;\n\n    // Render a new component\n    if(!component){\n      component = new Component(reduce, render, props, shouldUpdate);\n\n      // To determine the component's root element, we ask IncrementalDOM to track the first\n      // element rendered.\n      node = component.render();\n\n      // if(__DEV__){\n      if(!node){\n        console.log(\"Component render did not return a rendered node\", component.render.toString());\n      }\n      // }\n\n      rootNodeName = node.nodeName.toLowerCase();\n      component.node = node;\n      node.__component = component;\n    }\n    // Parent re-render\n    else{\n      let prevProps = component.props;\n      component.props = props;\n      if(!component.shouldUpdate || component.shouldUpdate(props, prevProps)) {\n        component.render();\n      }\n      else{\n        nextSibling();\n      }\n    }\n  };\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/StatefulComponent.js\n **/","import StatefulComponent from '../helpers/StatefulComponent';\n\nfunction handleBeginEditing(){\n  this.setState({pendingTitle:this.props.todo.title, isEditing:true});\n}\n\nfunction handleEndEditing(){\n  this.setState({isEditing:false});\n}\n\nfunction handleCommitEdit(){\n  if(this.state.isEditing){\n    this.props.onTitleChange(this.state.pendingTitle);\n    handleEndEditing.call(this);\n  }\n}\n\nfunction handlePendingEditKeydown(e){\n  let handled = false;\n  if(e.which === 13) {\n    handleCommitEdit.call(this);\n    handled = true;\n  }\n  else if(e.which === 27){\n    handleEndEditing.call(this);\n    handled = true;\n  }\n\n  if(handled){\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n}\n\nfunction handlePendingEditInput({which, target}){\n  this.setState({pendingTitle:target.value, isEditing:this.state.isEditing});\n}\n\nexport default StatefulComponent({\n  reduce:(props, state)=>({isEditing:false}),\n\n  render({key, todo, onTitleChange, onToggle, onDestroy}, {pendingTitle, isEditing}){\n    let className = '';\n    if(todo.completed) className += 'completed';\n    if(isEditing)      className += ' editing';\n\n    return (\n    \t<li className={className} key={key}>\n    \t\t<div className=\"view\">\n    \t\t\t<input\n    \t\t\t\tclassName=\"toggle\"\n    \t\t\t\ttype=\"checkbox\"\n    \t\t\t\tchecked={todo.completed}\n    \t\t\t\tonchange={onToggle} />\n          <label ondblclick={handleBeginEditing.bind(this)}>{todo.title}</label>\n    \t\t\t<button className=\"destroy\" onclick={onDestroy} />\n    \t\t</div>\n    \t\t<input\n          type=\"text\"\n          className=\"edit\"\n          onblur={handleCommitEdit.bind(this)}\n          onkeydown={handlePendingEditKeydown.bind(this)}\n          oninput={handlePendingEditInput.bind(this)}\n          value={pendingTitle} />\n    \t</li>\n    );\n  },\n\n  shouldUpdate:(props, prevProps)=>props.todo !== prevProps.todo\n\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/TodoItem.jsx\n **/","import StatefulComponent from '../helpers/StatefulComponent';\n\nexport default StatefulComponent({\n  reduce(){},\n  render:({incompleteCount, onClearCompleted})=>\n    <footer className=\"footer\">\n      <span className=\"todo-count\">{incompleteCount} left</span>\n      <ul className=\"filters\">\n        <li><a href=\"#/\" className=\"selected\">All</a></li>&nbsp;\n        <li><a href=\"#/active\" className=\"selected\">Active</a></li>&nbsp;\n        <li><a href=\"#/completed\" className=\"selected\">Completed</a></li>\n      </ul>\n  \t\t<button className=\"clear-completed\" onclick={onClearCompleted}>\n  \t\t\tClear completed\n  \t\t</button>\n    </footer>,\n\n  shouldUpdate:(props, prevProps)=>props.incompleteCount !== prevProps.incompleteCount\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/TodoFooter.jsx\n **/"],"sourceRoot":""}